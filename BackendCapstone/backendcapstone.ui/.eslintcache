[{"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\index.js":"1","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\App\\App.js":"2","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\connection.js":"3","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameEdit\\GameEdit.js":"4","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameNew\\GameNew.js":"5","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Home\\Home.js":"6","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Profile\\Profile.js":"7","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SingleGameView\\SingleGameView.js":"8","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Register\\Register.js":"9","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Games\\Games.js":"10","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyPracticePlans\\MyPracticePlans.js":"11","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SinglePracticePlanView\\SinglePracticePlanView.js":"12","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Login\\Login.js":"13","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js":"14","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\authData.js":"15","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlansData.js":"16","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanItem\\PracticePlanItem.js":"17","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanGameItem\\PracticePlanGameItem.js":"18","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlanGamesData.js":"19","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanShape.js":"20","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanGameShape.js":"21","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gamesData.js":"22","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\Footer\\Footer.js":"23","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\PracticePlanNewOrEdit\\PracticePlanNewOrEdit.js":"24","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameItem\\GameItem.js":"25","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\gameItemShape.js":"26","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentItem\\InstrumentItem.js":"27","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\instrumentShape.js":"28","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeItem\\AgeItem.js":"29","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\ageShape.js":"30","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyContributions\\MyContributions.js":"31","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\usersData.js":"32"},{"size":243,"mtime":1607189195780,"results":"33","hashOfConfig":"34"},{"size":4030,"mtime":1607661000025,"results":"35","hashOfConfig":"34"},{"size":248,"mtime":1607189195777,"results":"36","hashOfConfig":"34"},{"size":273,"mtime":1607661000025,"results":"37","hashOfConfig":"34"},{"size":272,"mtime":1607661000025,"results":"38","hashOfConfig":"34"},{"size":267,"mtime":1607661000025,"results":"39","hashOfConfig":"34"},{"size":1269,"mtime":1607661000025,"results":"40","hashOfConfig":"34"},{"size":3620,"mtime":1607661000058,"results":"41","hashOfConfig":"34"},{"size":3601,"mtime":1607661000025,"results":"42","hashOfConfig":"34"},{"size":1543,"mtime":1607661000025,"results":"43","hashOfConfig":"34"},{"size":1895,"mtime":1607661000025,"results":"44","hashOfConfig":"34"},{"size":3653,"mtime":1607661439814,"results":"45","hashOfConfig":"34"},{"size":3039,"mtime":1607372446189,"results":"46","hashOfConfig":"34"},{"size":3256,"mtime":1607661000074,"results":"47","hashOfConfig":"34"},{"size":1893,"mtime":1607189195776,"results":"48","hashOfConfig":"34"},{"size":788,"mtime":1607480399549,"results":"49","hashOfConfig":"34"},{"size":1006,"mtime":1607372446220,"results":"50","hashOfConfig":"34"},{"size":3212,"mtime":1607482599746,"results":"51","hashOfConfig":"34"},{"size":439,"mtime":1607409306382,"results":"52","hashOfConfig":"34"},{"size":402,"mtime":1607211376702,"results":"53","hashOfConfig":"34"},{"size":482,"mtime":1607213266557,"results":"54","hashOfConfig":"34"},{"size":419,"mtime":1607480399543,"results":"55","hashOfConfig":"34"},{"size":532,"mtime":1607661000074,"results":"56","hashOfConfig":"34"},{"size":14071,"mtime":1607661000025,"results":"57","hashOfConfig":"34"},{"size":1859,"mtime":1607657972915,"results":"58","hashOfConfig":"34"},{"size":963,"mtime":1607493690755,"results":"59","hashOfConfig":"34"},{"size":468,"mtime":1607493690751,"results":"60","hashOfConfig":"34"},{"size":230,"mtime":1607493690756,"results":"61","hashOfConfig":"34"},{"size":391,"mtime":1607493690700,"results":"62","hashOfConfig":"34"},{"size":216,"mtime":1607493690754,"results":"63","hashOfConfig":"34"},{"size":624,"mtime":1607661000025,"results":"64","hashOfConfig":"34"},{"size":178,"mtime":1607661000087,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1j1d2t5",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"68"},"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\index.js",[],["147","148","149","150","151","152","153","154"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\App\\App.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\connection.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameEdit\\GameEdit.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameNew\\GameNew.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Home\\Home.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Profile\\Profile.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SingleGameView\\SingleGameView.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Register\\Register.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Games\\Games.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyPracticePlans\\MyPracticePlans.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SinglePracticePlanView\\SinglePracticePlanView.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Login\\Login.js",["155","156"],"import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nimport './Login.scss';\r\n\r\nclass Login extends React.Component {\r\n  static propTypes = {\r\n    authed: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  state = {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n\r\n  loginClickEvent = (e) => {\r\n    const { user } = this.state;\r\n    e.preventDefault();\r\n    authData\r\n      .loginUser(user)\r\n      .then(() => {\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error while logging in.', error);\r\n      });\r\n  };\r\n\r\n  emailChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.email = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  passwordChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.password = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    const { authed } = this.props;\r\n    return (\r\n      <div className=\"Login text-center\" {...this.props}>\r\n        <div id=\"login-form\">\r\n          <h2>Log In</h2>\r\n          <div className=\"form-group\">\r\n              <div className=\"col-sm-12\">\r\n                <Link to=\"/register\" className=\"link\">Need to Register?</Link>\r\n              </div>\r\n            </div>\r\n          <form className=\"form-horizontal w-50 mx-auto\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputEmail\" className=\"col-sm-4\">\r\n                Email:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail\"\r\n                  placeholder=\"Email\"\r\n                  value={user.email}\r\n                  onChange={this.emailChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-4\">\r\n                Password:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={this.passwordChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"col-sm-12 buttonDiv\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mainButtons p-2\"\r\n                  onClick={this.loginClickEvent}\r\n                >\r\n                  Log In\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js",["157","158","159"],"import React from 'react';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport logo from '../../../images_backend_capstone/unlimited_logo.png';\r\n\r\nimport './MyNavbar.scss';\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nclass MyNavbar extends React.Component {\r\n  static propTypes = {\r\n    authed: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  state = {\r\n    isOpen: false,\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  logoutClickEvent = (e) => {\r\n    e.preventDefault();\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // logoutClickEvent = (e) => {\r\n  //   const { user } = this.state;\r\n  //   e.preventDefault();\r\n  //   authData\r\n  //     .logoutUser(user)\r\n  //     .then(() => {\r\n  //       this.props.history.push('/home');\r\n  //     })\r\n  //     .catch((error) => console.error('There was an error logging out.', error));\r\n  // }\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    const buildNavbar = () => {\r\n      const { authed } = this.props;\r\n      if (authed) {\r\n        return (\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/home\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/practiceplans\">My Practice Plans</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/suggestions\">My Suggestions</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/profile\">Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" onClick={this.logoutClickEvent} className=\"pointerHand\">Log Out</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        );\r\n      }\r\n      return <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" className=\"navLinks\" tag={RRNavLink} to=\"/home\">Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/games\">Games</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/login\">Log In</NavLink>\r\n          </NavItem>\r\n        </Nav>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"MyNavbar content\">\r\n          <Navbar className=\"nav sticky navbar-light\" id=\"navbar\" expand=\"md\">\r\n              <NavbarBrand href=\"/\">\r\n                  <img src={logo} width=\"150\" alt=\"company logo\" />\r\n              </NavbarBrand>\r\n              <NavbarToggler onClick={this.toggle} />\r\n              <Collapse isOpen={isOpen} navbar>\r\n                { buildNavbar() }\r\n              </Collapse>\r\n          </Navbar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNavbar;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\authData.js",["160"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\n// interceptors work by changing the outbound request before the xhr is sent\r\n// or by changing the response before it's returned to our .then() method.\r\naxios.interceptors.request.use((request) => {\r\n  const token = sessionStorage.getItem('token');\r\n  if (token != null) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return request;\r\n}, (err) => Promise.reject(err));\r\n\r\n// sub out whatever auth method firebase provides that you want to use.\r\nconst registerUser = (user) => firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n  .then((cred) => {\r\n    // get email and other user data from firebase\r\n    const userInfo = {\r\n      firebaseUid: firebase.auth().currentUser.uid,\r\n      email: user.email,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      photoUrl: user.photoUrl,\r\n    };\r\n\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token))\r\n      // save the user to the the api\r\n      .then(() => {\r\n        axios.post(`${baseUrl}/users`, userInfo);\r\n      });\r\n  });\r\n\r\n// sub out whatever auth method firebase provides that you want to use.\r\nconst loginUser = (user) => firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n  .then((cred) => {\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token));\r\n  });\r\nconst logoutUser = () => firebase.auth().signOut();\r\n\r\nconst getUid = () => firebase.auth().currentUser.uid;\r\n\r\nexport default {\r\n  getUid,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlansData.js",["161"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getUserPracticePlans = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/practiceplans`)\r\n    .then((userPracticePlansResponse) => {\r\n      resolve(userPracticePlansResponse.data);\r\n      console.error('pp cominging from db', userPracticePlansResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getSinglePracticePlan = (planId) => axios.get(`${baseUrl}/practiceplans/${planId}`);\r\n\r\nconst updatePracticePlan = (planId, updatedPracticePlan) => axios.put(`${baseUrl}/practiceplans/${planId}`, updatedPracticePlan);\r\n\r\nconst createPracticePlan = (newPracticePlan) => axios.post(`${baseUrl}/practiceplans`, newPracticePlan);\r\n\r\nexport default {\r\n  getUserPracticePlans,\r\n  getSinglePracticePlan,\r\n  updatePracticePlan,\r\n  createPracticePlan,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanItem\\PracticePlanItem.js",["162"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport practicePlanShape from '../../../helpers/propz/practicePlanShape';\r\nimport SinglePracticePlanView from '../../pages/SinglePracticePlanView/SinglePracticePlanView';\r\n\r\nimport './PracticePlanItem.scss';\r\n\r\nclass PracticePlanItem extends React.Component {\r\n  static propTypes = {\r\n    practicePlanItem: practicePlanShape.practicePlanShape,\r\n  }\r\n\r\n  render() {\r\n    const { practicePlanItem } = this.props;\r\n    const singleLink = `/practiceplans/${practicePlanItem.id}`;\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{practicePlanItem.name}</th>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanItem.startDate}</td>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanItem.endDate}</td>\r\n          <td><Link to={singleLink} className=\"iconButtons\"><i class=\"fas fa-binoculars\"></i></Link></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanGameItem\\PracticePlanGameItem.js",["163"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport practicePlanGamesData from '../../../helpers/data/practicePlanGamesData';\r\n\r\nimport practicePlanGameShape from '../../../helpers/propz/practicePlanGameShape';\r\n\r\nimport './PracticePlanGameItem.scss';\r\n\r\nclass PracticePlanGameItem extends React.Component {\r\n  static propTypes = {\r\n    practicePlanGame: practicePlanGameShape.practicePlanGameShape,\r\n    practicePlanId: PropTypes.number.isRequired,\r\n    refreshPage: PropTypes.func,\r\n  }\r\n\r\n  state = {\r\n    gameId: this.props.practicePlanGame.id,\r\n  }\r\n\r\n  inactivateRecord = (e) => {\r\n    const { practicePlanGame, practicePlanId } = this.props;\r\n    const { gameId } = this.state;\r\n    const updatedObject = {\r\n      id: gameId,\r\n      isActive: false,\r\n      practicePlanId,\r\n      name: practicePlanGame.practiceName,\r\n      practiceDate: practicePlanGame.practiceDate,\r\n      userNotes: practicePlanGame.userNotes,\r\n      isCompleted: practicePlanGame.isCompleted,\r\n    };\r\n    practicePlanGamesData.updatePracticePlanGame(gameId, updatedObject)\r\n      .then(() => {\r\n        this.props.refreshPage(practicePlanId);\r\n      })\r\n      .catch((error) => console.error('Could not delete this game from your plan.', error));\r\n  }\r\n\r\n  render() {\r\n    const { practicePlanGame } = this.props;\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{practicePlanGame.practiceName}</th>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanGame.gameName}</td>\r\n          <td>{practicePlanGame.practiceDate}</td>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanGame.userNotes}</td>\r\n          <td className=\"d-none d-md-table-cell\">\r\n            {\r\n            (practicePlanGame.isCompleted === true) ? <p>Yes!</p> : <p>Not yet.</p>\r\n            }\r\n          </td>\r\n          <td><button className=\"iconButtons\" onClick={this.inactivateRecord}><i class=\"fas fa-trash-alt\"></i></button></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanGameItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlanGamesData.js",["164"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst updatePracticePlanGame = (id, updatedPracticePlanGameRecord) => axios.put(`${baseUrl}/practiceplangames/${id}`, updatedPracticePlanGameRecord);\r\n\r\nexport default { updatePracticePlanGame };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanShape.js",["165"],"import PropTypes from 'prop-types';\r\n\r\nconst practicePlanShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  startDate: PropTypes.string.isRequired,\r\n  endDate: PropTypes.string.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  plannedGames: PropTypes.array,\r\n});\r\n\r\nexport default { practicePlanShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanGameShape.js",["166"],"import PropTypes from 'prop-types';\r\n\r\nconst practicePlanGameShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  practiceName: PropTypes.string.isRequired,\r\n  gameName: PropTypes.string.isRequired,\r\n  practiceDate: PropTypes.string.isRequired,\r\n  userNotes: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  practicePlanId: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default { practicePlanGameShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gamesData.js",["167"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getAllActiveGames = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games`)\r\n    .then((gamesResponse) => {\r\n      resolve(gamesResponse.data);\r\n      console.error('games axios resp', gamesResponse);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getGameById = (id) => axios.get(`${baseUrl}/games/${id}`);\r\n\r\nexport default { getAllActiveGames, getGameById };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\Footer\\Footer.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\PracticePlanNewOrEdit\\PracticePlanNewOrEdit.js",["168","169","170","171","172","173"],"import React from 'react';\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from 'reactstrap';\r\n\r\nimport PracticePlanGameItem from '../../shared/PracticePlanGameItem/PracticePlanGameItem';\r\n\r\nimport gamesData from '../../../helpers/data/gamesData';\r\nimport practicePlanGamesData from '../../../helpers/data/practicePlanGamesData';\r\nimport practicePlansData from '../../../helpers/data/practicePlansData';\r\n\r\nimport './PracticePlanNewOrEdit.scss';\r\n\r\nclass PracticePlanNew extends React.Component {\r\n  state = {\r\n    newRecordForm: true,\r\n    practicePlanId: this.props.match.params.practiceplanid * 1,\r\n    practicePlanName: '',\r\n    practicePlanStartDate: new Date().toLocaleDateString('en-US'),\r\n    practicePlanEndDate: '',\r\n    practicePlanActive: false,\r\n    gamesList: [],\r\n    gamesDropdownOpen: false,\r\n    gameFormModal: false,\r\n    selectedGameId: 0,\r\n    selectedGame: {},\r\n    practiceGameName: '',\r\n    practiceDate: new Date().toLocaleDateString('en-US'),\r\n    practiceNotes: '',\r\n    practiceCompleted: false,\r\n    selectedGames: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildNewPracticePlanPage();\r\n  }\r\n\r\n  buildNewPracticePlanPage = () => {\r\n    this.getCurrentPracticePlan();\r\n    this.getGamesList();\r\n  }\r\n\r\n  getPracticePlanDetails = () => {\r\n    practicePlansData.getSinglePracticePlan(this.state.practicePlanId)\r\n      .then((practicePlanIdResponse) => {\r\n        if (practicePlanIdResponse.status === 200) {\r\n          this.setState({\r\n            selectedGames: practicePlanIdResponse.data.plannedGames,\r\n            practicePlanName: practicePlanIdResponse.data.name,\r\n            practicePlanStartDate: practicePlanIdResponse.data.startDate,\r\n            practicePlanEndDate: practicePlanIdResponse.data.endDate,\r\n            practicePlanActive: practicePlanIdResponse.data.isActive,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.error('Could not upload practice plan data.', error));\r\n  }\r\n\r\n  getCurrentPracticePlan = () => {\r\n    if (this.props.match.params.practiceplanid === undefined) {\r\n      this.setState({ practicePlanId: 0, newRecordForm: true });\r\n    } else {\r\n      this.setState({\r\n        practicePlanId: this.props.match.params.practiceplanid * 1,\r\n        newRecordForm: false,\r\n      });\r\n      this.getPracticePlanDetails();\r\n    }\r\n  }\r\n\r\n  getGamesList = () => {\r\n    gamesData.getAllActiveGames()\r\n      .then((gamesListResponse) => {\r\n        this.setState({ gamesList: gamesListResponse });\r\n      })\r\n      .catch((error) => console.error('Unable to get list of games.', error));\r\n  }\r\n\r\n  cancelAction = () => {\r\n    this.props.history.push('/practiceplans');\r\n  }\r\n\r\n  // change functions for the fields on the new practice plan form:\r\n  changePracticePlanName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practicePlanName: e.target.value });\r\n  }\r\n\r\n  changePracticePlanStartDate = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practicePlanStartDate: e.target.value });\r\n  }\r\n\r\n  changePracticePlanEndDate = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practicePlanEndDate: e.target.value });\r\n  }\r\n\r\n  saveNewPracticePlan = (e) => {\r\n    const {\r\n      practicePlanName,\r\n      practicePlanStartDate,\r\n      practicePlanEndDate,\r\n    } = this.state;\r\n    e.preventDefault();\r\n    const newPracticePlan = {\r\n      name: practicePlanName,\r\n      startDate: practicePlanStartDate,\r\n      endDate: practicePlanEndDate,\r\n    };\r\n    practicePlansData.createPracticePlan(newPracticePlan)\r\n      .then((newPracticePlanResponse) => {\r\n        this.setState({ practicePlanId: newPracticePlanResponse.data, newRecordForm: false });\r\n      })\r\n      .catch((error) => console.error('Unable to create this practice plan.', error));\r\n  }\r\n\r\n  // functions for the edit-version of this form:\r\n  saveUpdatedPracticePlan = (e) => {\r\n    const {\r\n      practicePlanId,\r\n      practicePlanName,\r\n      practicePlanStartDate,\r\n      practicePlanEndDate,\r\n      practicePlanActive,\r\n      selectedGames,\r\n    } = this.state;\r\n    e.preventDefault();\r\n    const updatedPracticePlan = {\r\n      planId: practicePlanId,\r\n      name: practicePlanName,\r\n      startDate: practicePlanStartDate,\r\n      endDate: practicePlanEndDate,\r\n      isActive: practicePlanActive,\r\n    };\r\n    practicePlansData.updatePracticePlan(practicePlanId, updatedPracticePlan)\r\n      .then(() => {\r\n        this.props.history.push(`/practiceplans/${practicePlanId}`);\r\n      })\r\n      .catch((error) => console.error('Unable to update practice plan details.', error));\r\n  }\r\n\r\n  toggleGamesDropdown = () => {\r\n    this.setState({ gamesDropdownOpen: !this.state.gamesDropdownOpen });\r\n  }\r\n\r\n  // functions for the new practice plan game form on the modal:\r\n  toggleGameFormModal = () => {\r\n    this.setState({ gameFormModal: !this.state.gameFormModal });\r\n  }\r\n\r\n  closeGameFormModal = () => {\r\n    this.setState({ gameFormModal: false });\r\n  }\r\n\r\n  getGameForm = (e) => {\r\n    this.setState({ gameFormModal: true });\r\n    gamesData.getGameById(e.target.value)\r\n      .then((singleGameResponse) => {\r\n        this.setState({\r\n          selectedGame: singleGameResponse.data,\r\n          selectedGameId: singleGameResponse.data.id,\r\n          practiceGameName: singleGameResponse.data.name,\r\n        });\r\n      });\r\n  };\r\n\r\n  changePracticeGameName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceGameName: e.target.value });\r\n  }\r\n\r\n  changePracticeDate = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceDate: e.target.value });\r\n  }\r\n\r\n  changePracticeNotes = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceNotes: e.target.value });\r\n  }\r\n\r\n  changePracticeCompleted = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceCompleted: e.target.checked });\r\n  }\r\n\r\n  savePracticePlanGame = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      practiceGameName,\r\n      practiceDate,\r\n      practiceNotes,\r\n      practiceCompleted,\r\n      selectedGameId,\r\n      practicePlanId,\r\n      selectedGame,\r\n    } = this.state;\r\n    if (practiceGameName == '') {\r\n      this.setState({ practiceGameName: selectedGame.name });\r\n    }\r\n    if (practiceDate == '') {\r\n      this.setState({ practiceDate: new Date() });\r\n    }\r\n    const newPracticePlanGame = {\r\n      name: this.state.practiceGameName,\r\n      practiceDate: this.state.practiceDate,\r\n      userNotes: practiceNotes,\r\n      isCompleted: practiceCompleted,\r\n      practicePlanId,\r\n      gameId: selectedGameId,\r\n    };\r\n    practicePlanGamesData.createNewPracticePlanGame(newPracticePlanGame)\r\n      .then((newPpgResponse) => {\r\n        this.closeGameFormModal();\r\n        this.getPracticePlanDetails();\r\n      })\r\n      .catch((error) => console.error('Could not add the game selected to your practice plan.', error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      newRecordForm,\r\n      practicePlanId,\r\n      practicePlanName,\r\n      practicePlanStartDate,\r\n      practicePlanEndDate,\r\n      gamesList,\r\n      gamesDropdownOpen,\r\n      gameFormModal,\r\n      practiceGameName,\r\n      practiceDate,\r\n      practiceNotes,\r\n      practiceCompleted,\r\n      selectedGame,\r\n      selectedGames,\r\n    } = this.state;\r\n\r\n    const buildGamesDropdownOptions = () => gamesList.map((game) => (\r\n      <DropdownItem key={game.id} value={game.id} game={game} onClick={this.getGameForm}>{game.name}</DropdownItem>\r\n    ));\r\n\r\n    const buildGamesGrid = () => selectedGames.map((item) => (\r\n      <PracticePlanGameItem key={item.id} practicePlanGame={item} practicePlanId={item.practicePlanId} refreshPage={this.buildNewPracticePlanPage} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"PracticePlanNew\">\r\n        {\r\n          (newRecordForm === true)\r\n            ? <h2>Add New Practice Plan</h2>\r\n            : <h2>Update Practice Plan: {practicePlanName}</h2>\r\n        }\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            {/* form for new practice plan info OR practice plan info to be edited below: */}\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"practiceName\">Name</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                    name=\"practiceName\"\r\n                    id=\"practiceName\"\r\n                    placeholder=\"Give it a name!\"\r\n                    value={practicePlanName}\r\n                    onChange={this.changePracticePlanName}\r\n                  />\r\n              </FormGroup>\r\n\r\n              { (newRecordForm === true)\r\n                ? <FormGroup>\r\n                <Label for=\"practicePlanStartDate\">Start Date (MM/DD/YYYY)</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                  name=\"practicePlanStartDate\"\r\n                  defaultValue={new Date().toLocaleDateString('en-US')}\r\n                  id=\"practicePlanStartDate\"\r\n                  onChange={this.changePracticePlanStartDate}\r\n                />\r\n              </FormGroup>\r\n                : <FormGroup>\r\n                <Label for=\"practicePlanStartDate\">Start Date (MM/DD/YYYY)</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                  name=\"practicePlanStartDate\"\r\n                  value={practicePlanStartDate}\r\n                  id=\"practicePlanStartDate\"\r\n                  onChange={this.changePracticePlanStartDate}\r\n                />\r\n              </FormGroup>\r\n              }\r\n\r\n              <FormGroup>\r\n                <Label for=\"practicePlanEndDate\">End Date (MM/DD/YYYY)</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                  name=\"practicePlanEndDate\"\r\n                  id=\"practicePlanEndDate\"\r\n                  value={practicePlanEndDate}\r\n                  onChange={this.changePracticePlanEndDate}\r\n                />\r\n              </FormGroup>\r\n              {\r\n                newRecordForm === true\r\n                  ? <Button onClick={this.saveNewPracticePlan}>Save and Add Games</Button>\r\n                  : <Button onClick={this.saveUpdatedPracticePlan}>Save Changes</Button>\r\n              }\r\n              <Button onClick={this.cancelAction}>Cancel</Button>\r\n            </Form>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n          {\r\n            newRecordForm === false\r\n              ? <FormGroup>\r\n                  <Dropdown isOpen={gamesDropdownOpen} toggle={this.toggleGamesDropdown}>\r\n                    <DropdownToggle caret>\r\n                      Add Game\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      {buildGamesDropdownOptions()}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </FormGroup>\r\n              : ''\r\n          }\r\n              <div/>\r\n              <div className=\"row\">\r\n                {\r\n                  this.state.selectedGames.length === 0\r\n                    ? ''\r\n                    : <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Practice Game</th>\r\n              <th className=\"d-none d-md-table-cell\">Original Game</th>\r\n              <th>Practice Date</th>\r\n              <th className=\"d-none d-md-table-cell\">Our Notes</th>\r\n              <th className=\"d-none d-md-table-cell\">Completed?</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          {buildGamesGrid()}\r\n        </Table>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n          {/* code for modal about the game selected below: */}\r\n          <Modal isOpen={this.state.gameFormModal} toggle={this.toggleGameFormModal}>\r\n            <ModalHeader toggle={this.toggleGameFormModal}>Details for Selected Game: {this.state.selectedGame.name}</ModalHeader>\r\n            <ModalBody>\r\n              <div>\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for=\"practiceName\">Practice Game Name (customize as needed)</Label>\r\n                  <Input\r\n                    type=\"input\"\r\n                    name=\"practiceName\"\r\n                    value={practiceGameName}\r\n                    id=\"practiceName\"\r\n                    onChange={this.changePracticeGameName}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"practiceDate\">Practice Date (MM/DD/YYYY)</Label>\r\n                  <Input\r\n                    type=\"input\"\r\n                    name=\"practiceDate\"\r\n                    value={practiceDate}\r\n                    id=\"practiceDate\"\r\n                    onChange={this.changePracticeDate}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"userNotes\">Notes</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"userNotes\"\r\n                    id=\"userNotes\"\r\n                    placeholder=\"Anything specific to remember for this practice?\"\r\n                    value={practiceNotes}\r\n                    onChange={this.changePracticeNotes}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      id=\"isCompleted\"\r\n                      value={practiceCompleted}\r\n                      onChange={this.changePracticeCompleted}\r\n                    />{' '}\r\n                    Already completed this practice?\r\n                  </Label>\r\n                </FormGroup>\r\n              </Form>\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button onClick={this.savePracticePlanGame}>Save Game</Button>\r\n              <Button onClick={this.closeGameFormModal}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanNew;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameItem\\GameItem.js",["174"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from 'reactstrap';\r\n\r\nimport AgeItem from '../AgeItem/AgeItem';\r\nimport InstrumentItem from '../InstrumentItem/InstrumentItem';\r\n\r\nimport gameItemShape from '../../../helpers/propz/gameItemShape';\r\n\r\nimport './GameItem.scss';\r\n\r\nclass GameItem extends React.Component {\r\n  static propTypes = {\r\n    gameItem: gameItemShape.gameItemShape,\r\n  }\r\n\r\n  render() {\r\n    const { gameItem } = this.props;\r\n    const singleGameLink = `/games/${gameItem.id}`;\r\n\r\n    const displayInstruments = () => gameItem.instrumentsForGame.map((instrument) => (\r\n      <InstrumentItem key={instrument.id} instrument={instrument} />\r\n    ));\r\n\r\n    const displayAges = () => gameItem.agesForGame.map((age) => (\r\n      <AgeItem key={age.id} age={age} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"col-md-4 gameCard\">\r\n        <Card>\r\n        <CardHeader className=\"gameCardHeader\">\r\n          <div className=\"gameIcon\"><i class={gameItem.gameIconHtml}></i></div>\r\n          <div className=\"gameCardHeaderTitle\">{gameItem.name}</div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\"></CardTitle>\r\n          <CardText>\r\n            <p><span className=\"label\">Instruments:</span>    {displayInstruments()}</p>\r\n            <p><span className=\"label\">Prework Level:</span>    {gameItem.preworkLevelName}</p>\r\n            <p><span className=\"label\">Ages:</span>    {displayAges()}</p>\r\n          </CardText>\r\n        </CardBody>\r\n        <CardFooter className=\"cardFooter\">\r\n          <Link to='/games/{gameItem.id}' className=\"iconButtons doubleSize\"><i class=\"fas fa-binoculars\"></i></Link>\r\n        </CardFooter>\r\n      </Card>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\gameItemShape.js",["175"],"import PropTypes from 'prop-types';\r\n\r\nconst gameItemShape = PropTypes.shape({\r\n  agesForGame: PropTypes.array.isRequired,\r\n  credit: PropTypes.string,\r\n  dateCreated: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  gameIconId: PropTypes.number,\r\n  gameIconHtml: PropTypes.string,\r\n  gameIconUrl: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  instructions: PropTypes.string,\r\n  instrumentsForGame: PropTypes.array.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  keywords: PropTypes.array,\r\n  name: PropTypes.string.isRequired,\r\n  overallRating: PropTypes.number,\r\n  prework: PropTypes.string,\r\n  preworkLevelId: PropTypes.number.isRequired,\r\n  preworkLevelName: PropTypes.string.isRequired,\r\n  songs: PropTypes.array,\r\n  submittedByUserId: PropTypes.number,\r\n  userFirstName: PropTypes.string,\r\n  userLastName: PropTypes.string,\r\n  websiteUrl: PropTypes.string,\r\n});\r\n\r\nexport default { gameItemShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentItem\\InstrumentItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\instrumentShape.js",["176"],"import PropTypes from 'prop-types';\r\n\r\nconst instrumentShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { instrumentShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeItem\\AgeItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\ageShape.js",["177"],"import PropTypes from 'prop-types';\r\n\r\nconst ageShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { ageShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyContributions\\MyContributions.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\usersData.js",["178"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getSingleUser = () => axios.get(`${baseUrl}/users/user`);\r\n\r\nexport default { getSingleUser };\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"199","line":52,"column":13,"nodeType":"197","messageId":"198","endLine":52,"endColumn":19},{"ruleId":"195","severity":1,"message":"200","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":76,"column":77,"nodeType":"203","endLine":76,"endColumn":100},{"ruleId":"201","severity":1,"message":"202","line":83,"column":43,"nodeType":"203","endLine":83,"endColumn":63},{"ruleId":"204","severity":1,"message":"205","line":51,"column":1,"nodeType":"206","endLine":56,"endColumn":3},{"ruleId":"204","severity":1,"message":"205","line":18,"column":1,"nodeType":"206","endLine":23,"endColumn":3},{"ruleId":"195","severity":1,"message":"207","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":30},{"ruleId":"195","severity":1,"message":"208","line":25,"column":21,"nodeType":"197","messageId":"198","endLine":25,"endColumn":38},{"ruleId":"204","severity":1,"message":"205","line":8,"column":1,"nodeType":"206","endLine":8,"endColumn":70},{"ruleId":"204","severity":1,"message":"205","line":13,"column":1,"nodeType":"206","endLine":13,"endColumn":38},{"ruleId":"204","severity":1,"message":"205","line":14,"column":1,"nodeType":"206","endLine":14,"endColumn":42},{"ruleId":"204","severity":1,"message":"205","line":14,"column":1,"nodeType":"206","endLine":14,"endColumn":51},{"ruleId":"195","severity":1,"message":"209","line":139,"column":7,"nodeType":"197","messageId":"198","endLine":139,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":212,"column":26,"nodeType":"212","messageId":"213","endLine":212,"endColumn":28},{"ruleId":"210","severity":1,"message":"211","line":215,"column":22,"nodeType":"212","messageId":"213","endLine":215,"endColumn":24},{"ruleId":"195","severity":1,"message":"214","line":237,"column":7,"nodeType":"197","messageId":"198","endLine":237,"endColumn":21},{"ruleId":"195","severity":1,"message":"215","line":243,"column":7,"nodeType":"197","messageId":"198","endLine":243,"endColumn":20},{"ruleId":"195","severity":1,"message":"216","line":248,"column":7,"nodeType":"197","messageId":"198","endLine":248,"endColumn":19},{"ruleId":"195","severity":1,"message":"217","line":5,"column":3,"nodeType":"197","messageId":"198","endLine":5,"endColumn":9},{"ruleId":"204","severity":1,"message":"205","line":28,"column":1,"nodeType":"206","endLine":28,"endColumn":34},{"ruleId":"204","severity":1,"message":"205","line":9,"column":1,"nodeType":"206","endLine":9,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":9,"column":1,"nodeType":"206","endLine":9,"endColumn":29},{"ruleId":"204","severity":1,"message":"205","line":6,"column":1,"nodeType":"206","endLine":6,"endColumn":34},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"lines-around-directive",["220"],"no-spaced-func",["221"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'authed' is assigned a value but never used.","'authData' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'SinglePracticePlanView' is defined but never used.","'practiceCompleted' is assigned a value but never used.","'selectedGames' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'practicePlanId' is assigned a value but never used.","'gameFormModal' is assigned a value but never used.","'selectedGame' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements","func-call-spacing"]