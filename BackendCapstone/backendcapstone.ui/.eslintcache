[{"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\index.js":"1","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\App\\App.js":"2","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\connection.js":"3","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameEdit\\GameEdit.js":"4","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameNew\\GameNew.js":"5","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Home\\Home.js":"6","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Profile\\Profile.js":"7","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SingleGameView\\SingleGameView.js":"8","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Register\\Register.js":"9","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Games\\Games.js":"10","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyPracticePlans\\MyPracticePlans.js":"11","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SinglePracticePlanView\\SinglePracticePlanView.js":"12","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Login\\Login.js":"13","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js":"14","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\authData.js":"15","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlansData.js":"16","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanItem\\PracticePlanItem.js":"17","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanGameItem\\PracticePlanGameItem.js":"18","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlanGamesData.js":"19","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanShape.js":"20","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanGameShape.js":"21","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gamesData.js":"22","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\Footer\\Footer.js":"23","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\PracticePlanNewOrEdit\\PracticePlanNewOrEdit.js":"24","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameItem\\GameItem.js":"25","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\gameItemShape.js":"26","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentItem\\InstrumentItem.js":"27","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\instrumentShape.js":"28","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeItem\\AgeItem.js":"29","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\ageShape.js":"30","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\usersData.js":"31","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\agesData.js":"32","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\instrumentsData.js":"33","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\preworkLevelsData.js":"34","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeFilterItem\\AgeFilterItem.js":"35","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentFilterItem\\InstrumentFilterItem.js":"36","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PreworkLevelFilterItem\\PreworkLevelFilterItem.js":"37","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\preworkLevelShape.js":"38","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\userShape.js":"39","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyContributions\\MyContributions.js":"40","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameContributedItem\\GameContributedItem.js":"41"},{"size":243,"mtime":1607189195780,"results":"42","hashOfConfig":"43"},{"size":4396,"mtime":1608400935419,"results":"44","hashOfConfig":"43"},{"size":248,"mtime":1607189195777,"results":"45","hashOfConfig":"43"},{"size":273,"mtime":1607661000025,"results":"46","hashOfConfig":"43"},{"size":272,"mtime":1607661000025,"results":"47","hashOfConfig":"43"},{"size":734,"mtime":1608083894700,"results":"48","hashOfConfig":"43"},{"size":1434,"mtime":1608387901770,"results":"49","hashOfConfig":"43"},{"size":3942,"mtime":1608271507170,"results":"50","hashOfConfig":"43"},{"size":3785,"mtime":1608400935420,"results":"51","hashOfConfig":"43"},{"size":8248,"mtime":1608387901765,"results":"52","hashOfConfig":"43"},{"size":1968,"mtime":1608387901766,"results":"53","hashOfConfig":"43"},{"size":3351,"mtime":1608387901811,"results":"54","hashOfConfig":"43"},{"size":2932,"mtime":1608083894718,"results":"55","hashOfConfig":"43"},{"size":2813,"mtime":1608387901848,"results":"56","hashOfConfig":"43"},{"size":2088,"mtime":1607805461571,"results":"57","hashOfConfig":"43"},{"size":917,"mtime":1608387901878,"results":"58","hashOfConfig":"43"},{"size":1007,"mtime":1608387901870,"results":"59","hashOfConfig":"43"},{"size":3246,"mtime":1607805461571,"results":"60","hashOfConfig":"43"},{"size":439,"mtime":1607409306382,"results":"61","hashOfConfig":"43"},{"size":406,"mtime":1608387901893,"results":"62","hashOfConfig":"43"},{"size":482,"mtime":1607213266557,"results":"63","hashOfConfig":"43"},{"size":1719,"mtime":1608400935428,"results":"64","hashOfConfig":"43"},{"size":532,"mtime":1607661000074,"results":"65","hashOfConfig":"43"},{"size":14115,"mtime":1607805461569,"results":"66","hashOfConfig":"43"},{"size":1973,"mtime":1608387901818,"results":"67","hashOfConfig":"43"},{"size":881,"mtime":1608387901890,"results":"68","hashOfConfig":"43"},{"size":468,"mtime":1607493690751,"results":"69","hashOfConfig":"43"},{"size":230,"mtime":1607493690756,"results":"70","hashOfConfig":"43"},{"size":391,"mtime":1607493690700,"results":"71","hashOfConfig":"43"},{"size":216,"mtime":1607665977283,"results":"72","hashOfConfig":"43"},{"size":178,"mtime":1607661000087,"results":"73","hashOfConfig":"43"},{"size":323,"mtime":1607798817162,"results":"74","hashOfConfig":"43"},{"size":358,"mtime":1607798817164,"results":"75","hashOfConfig":"43"},{"size":368,"mtime":1607798817165,"results":"76","hashOfConfig":"43"},{"size":887,"mtime":1607798817147,"results":"77","hashOfConfig":"43"},{"size":985,"mtime":1607798817158,"results":"78","hashOfConfig":"43"},{"size":1013,"mtime":1607798817160,"results":"79","hashOfConfig":"43"},{"size":234,"mtime":1607798817167,"results":"80","hashOfConfig":"43"},{"size":455,"mtime":1608083894722,"results":"81","hashOfConfig":"43"},{"size":2020,"mtime":1608387901820,"results":"82","hashOfConfig":"43"},{"size":929,"mtime":1608387901814,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1j1d2t5",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"86"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\index.js",[],["192","193","194","195","196","197","198","199"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\App\\App.js",["200"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\connection.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameEdit\\GameEdit.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameNew\\GameNew.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Home\\Home.js",["201","202"],"import React from 'react';\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nimport usersData from '../../../helpers/data/usersData';\r\n\r\nimport './Home.scss';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    user: {},\r\n    userLoggedIn: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser = () => {\r\n    usersData.getSingleUser()\r\n      .then((userResponse) => {\r\n        this.setState({ user: userResponse.data, userLoggedIn: true });\r\n      })\r\n      .catch((error) => console.error('Could not get user data.', error));\r\n  }\r\n\r\n  render() {\r\n    const { user, userLoggedIn } = this.state;\r\n\r\n    return (\r\n      <div className=\"Home\">\r\n        {\r\n          userLoggedIn === false ? <h2 className=\"pageTitle\">Welcome to Unlimited!</h2> : <h2 className=\"pageTitle\">Welcome to Unlimited, {user.firstName}!</h2>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Profile\\Profile.js",["203"],"import React from 'react';\r\n\r\nimport usersData from '../../../helpers/data/usersData';\r\n\r\nimport './Profile.scss';\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    user: {},\r\n  }\r\n\r\n  getUser = () => {\r\n    usersData.getSingleUser()\r\n      .then((singleUserResponse) => {\r\n        this.setState({ user: singleUserResponse.data });\r\n        console.error('singleUserResp', singleUserResponse);\r\n      })\r\n      .catch((error) => console.error('Unable to get user data.', error));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <div className=\"Profile\">\r\n        <h2 className=\"pageTitle\">My Profile</h2>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n              <img src={user.photoUrl} als=\"user photo\" className=\"userPhoto\"/>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h4>Hello, {user.firstName} {user.lastName}!</h4>\r\n              <p>Active member since: {user.activeDate}</p>\r\n              <p>User ID: {user.id}</p>\r\n              <p>Email: {user.email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SingleGameView\\SingleGameView.js",["204","205","206","207","208"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport AgeItem from '../../shared/AgeItem/AgeItem';\r\nimport InstrumentItem from '../../shared/InstrumentItem/InstrumentItem';\r\n\r\nimport gamesData from '../../../helpers/data/gamesData';\r\n\r\nimport './SingleGameView.scss';\r\n\r\nclass SingleGameView extends React.Component {\r\n  state = {\r\n    selectedGame: {},\r\n    selectedGameId: this.props.match.params.gameid,\r\n    instrumentsForGame: [],\r\n    agesForGame: [],\r\n  }\r\n\r\n  buildSingleGameView = () => {\r\n    const { selectedGameId } = this.state;\r\n    gamesData.getGameById(selectedGameId)\r\n      .then((singleGameResponse) => {\r\n        this.setState({\r\n          selectedGame: singleGameResponse.data,\r\n          instrumentsForGame: singleGameResponse.data.instrumentsForGame,\r\n          agesForGame: singleGameResponse.data.agesForGame,\r\n        });\r\n        console.error('single game respo', singleGameResponse);\r\n      })\r\n      .catch((error) => console.error('Could not get this game.', error));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildSingleGameView();\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  }\r\n\r\n  render() {\r\n    const { selectedGame, instrumentsForGame, agesForGame } = this.state;\r\n\r\n    const displayInstruments = () => instrumentsForGame.map((instrument) => (\r\n      <InstrumentItem key={instrument.id} instrument={instrument} />\r\n    ));\r\n\r\n    const displayAges = () => agesForGame.map((age) => (\r\n      <AgeItem key={age.id} age={age} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"SingleGameView\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n              <h2 className=\"pageTitle\">Game Details: {selectedGame.name}</h2>\r\n            </div>\r\n            <div className=\"col-md-3 buttonDiv\">\r\n              <Link to='/games' className=\"mainButtons p-2\">Back</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* game data below: */}\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-around\">\r\n            <div className=\"col col-md-6\">\r\n              <img src={selectedGame.photoUrl} alt=\"Photo of game in action\" className=\"gameImage\" />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n            <h5>{selectedGame.description}</h5>\r\n              <h6>Instrument(s): {displayInstruments()}</h6>\r\n              {\r\n                (selectedGame.songs != '')\r\n                  ? <h6>Song(s): {selectedGame.songs}</h6>\r\n                  : ''\r\n              }\r\n              <h6>Ages: {displayAges()}</h6>\r\n              <h6>Prework Level: {selectedGame.preworkLevelName}</h6>\r\n              <h6>Keywords: {selectedGame.keywords}</h6>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 verticallyCentered\">\r\n                  <h6>Submitted by: {selectedGame.userFirstName} {selectedGame.userLastName}</h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <img src={selectedGame.userPhotoUrl} alt=\"user photo\" className=\"userPhotoInGame\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h6>Prework:</h6>\r\n              <p>{selectedGame.prework}</p>\r\n              <h6>Instructions:</h6>\r\n              {selectedGame.instructions}\r\n            </div>\r\n          </div>\r\n          {\r\n            selectedGame.credit != ''\r\n              ? <div className=\"row\">\r\n              <div className=\"col credit\">\r\n                <h6>Credit: {selectedGame.credit}</h6>\r\n                <a href={selectedGame.websiteUrl} target=\"_blank\"><h6>Click here to visit the website!</h6></a>\r\n              </div>\r\n            </div>\r\n              : ''\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleGameView;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Register\\Register.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Games\\Games.js",["209","210","211","212","213"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n\r\nimport AgeFilterItem from '../../shared/AgeFilterItem/AgeFilterItem';\r\nimport GameItem from '../../shared/GameItem/GameItem';\r\nimport InstrumentFilterItem from '../../shared/InstrumentFilterItem/InstrumentFilterItem';\r\nimport PreworkLevelFilterItem from '../../shared/PreworkLevelFilterItem/PreworkLevelFilterItem';\r\n\r\nimport agesData from '../../../helpers/data/agesData';\r\nimport gamesData from '../../../helpers/data/gamesData';\r\nimport instrumentsData from '../../../helpers/data/instrumentsData';\r\nimport preworkLevelsData from '../../../helpers/data/preworkLevelsData';\r\n\r\nimport ageShape from '../../../helpers/propz/ageShape';\r\n\r\nimport './Games.scss';\r\n\r\nclass Games extends React.Component {\r\n  state = {\r\n    gamesList: [],\r\n    agesList: [],\r\n    instrumentsList: [],\r\n    preworkLevelsList: [],\r\n    selectedAges: [],\r\n    selectedInstruments: [],\r\n    selectedPreworkLevels: [],\r\n    filteredGamesList: [],\r\n    searchInput: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildGamesPage();\r\n  }\r\n\r\n  buildGamesPage = () => {\r\n    this.getGames();\r\n    this.getAges();\r\n    this.getInstruments();\r\n    this.getPreworkLevels();\r\n    this.clearCheckboxes();\r\n  }\r\n\r\n  clearCheckboxes = () => {\r\n    { $('.filterCheckbox').prop('checked', false); }\r\n    this.setState({\r\n      selectedAges: [],\r\n      selectedInstruments: [],\r\n      selectedPreworkLevels: [],\r\n      searchInput: '',\r\n    });\r\n  }\r\n\r\n  getGames = () => {\r\n    gamesData.getAllActiveGames()\r\n      .then((gamesResponse) => {\r\n        this.setState({ gamesList: gamesResponse });\r\n      });\r\n  }\r\n\r\n  getFilteredGamesList = () => {\r\n    const {\r\n      selectedAges,\r\n      selectedInstruments,\r\n      selectedPreworkLevels,\r\n      searchInput,\r\n    } = this.state;\r\n    if (searchInput !== '' || selectedAges !== [] || selectedInstruments !== [] || selectedPreworkLevels !== []) {\r\n      gamesData.getFilteredGames(searchInput, selectedAges, selectedInstruments, selectedPreworkLevels)\r\n        .then((filteredGamesResponse) => {\r\n          this.setState({ filteredGamesList: filteredGamesResponse, gamesList: filteredGamesResponse });\r\n        });\r\n    }\r\n  }\r\n\r\n  getAges = () => {\r\n    agesData.getAgesList()\r\n      .then((agesResponse) => {\r\n        this.setState({ agesList: agesResponse });\r\n      });\r\n  }\r\n\r\n  getInstruments = () => {\r\n    instrumentsData.getInstrumentsList()\r\n      .then((instrumentsResponse) => {\r\n        this.setState({ instrumentsList: instrumentsResponse });\r\n      });\r\n  }\r\n\r\n  getPreworkLevels = () => {\r\n    preworkLevelsData.getPreworkLevelsList()\r\n      .then((preworkLevelsResponse) => {\r\n        this.setState({ preworkLevelsList: preworkLevelsResponse });\r\n      });\r\n  }\r\n\r\n  changeSearchInput = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ searchInput: e.target.value });\r\n    console.error('searchinput in state', this.state.searchInput);\r\n  }\r\n\r\n  changeAgeFilter = (e) => {\r\n    const { selectedAges } = this.state;\r\n    if (e.target.checked === true) {\r\n      this.setState({ selectedAges: [...this.state.selectedAges, e.target.value] });\r\n    } else if (e.target.checked === false) {\r\n      const index = this.state.selectedAges.indexOf(e.target.value);\r\n      if (index > -1) {\r\n        this.state.selectedAges.splice(index, 1);\r\n        this.setState({ selectedAges });\r\n        this.getFilteredGamesList();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeInstrumentFilter = (e) => {\r\n    const { selectedInstruments } = this.state;\r\n    if (e.target.checked === true) {\r\n      this.setState({ selectedInstruments: [...this.state.selectedInstruments, e.target.value] });\r\n    } else if (e.target.checked === false) {\r\n      const index = this.state.selectedInstruments.indexOf(e.target.value);\r\n      if (index > -1) {\r\n        this.state.selectedInstruments.splice(index, 1);\r\n        this.setState({ selectedInstruments });\r\n        this.getFilteredGamesList();\r\n      }\r\n    }\r\n  }\r\n\r\n  changePreworkLevelFilter = (e) => {\r\n    const { selectedPreworkLevels } = this.state;\r\n    if (e.target.checked === true) {\r\n      this.setState({ selectedPreworkLevels: [...this.state.selectedPreworkLevels, e.target.value] });\r\n    } else if (e.target.checked === false) {\r\n      const index = this.state.selectedPreworkLevels.indexOf(e.target.value);\r\n      if (index > -1) {\r\n        this.state.selectedPreworkLevels.splice(index, 1);\r\n        this.setState({ selectedPreworkLevels });\r\n        this.getFilteredGamesList();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.selectedAges !== this.state.selectedAges\r\n    || prevState.selectedInstruments !== this.state.selectedInstruments\r\n    || prevState.selectedPreworkLevels !== this.state.selectedPreworkLevels) {\r\n      console.error('prevstate in compdidupdate', prevState);\r\n      console.error('current state', this.state);\r\n      this.getFilteredGamesList();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      gamesList,\r\n      agesList,\r\n      instrumentsList,\r\n      preworkLevelsList,\r\n      selectedAges,\r\n      selectedInstruments,\r\n      selectedPreworkLevels,\r\n      searchInput,\r\n    } = this.state;\r\n\r\n    const buildGames = () => gamesList.map((game) => (\r\n      <GameItem key={game.id} gameItem={game} />\r\n    ));\r\n\r\n    const buildAgeFilters = () => agesList.map((age) => (\r\n      <AgeFilterItem key={age.id} ageFilter={age} onClick={this.changeAgeFilter} />\r\n    ));\r\n\r\n    const buildInstrumentFilters = () => instrumentsList.map((instrument) => (\r\n      <InstrumentFilterItem key={instrument.id} instrumentFilter={instrument} onClick={this.changeInstrumentFilter} />\r\n    ));\r\n\r\n    const buildPreworkLevelsFilters = () => preworkLevelsList.map((level) => (\r\n      <PreworkLevelFilterItem key={level.id} preworkLevelFilter={level} onClick={this.changePreworkLevelFilter} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"Games container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Filter</h3>\r\n              </div>\r\n              <div className=\"col-md-6 buttonDiv\">\r\n                <button type=\"button\" className=\"mainButtons p-2\" onClick={this.buildGamesPage}>Clear</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-9\">\r\n                <input className=\"setWidth\" type=\"text\" placeholder=\"Search keywords\" name=\"search\" value={searchInput} onChange={this.changeSearchInput} />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <button type=\"button\" className=\"mainButtons p-2\" onClick={this.getFilteredGamesList}><i className=\"fas fa-search\"></i></button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Age</h4>\r\n              {buildAgeFilters()}\r\n            </div>\r\n            <div>\r\n              <h4>Instrument</h4>\r\n              {buildInstrumentFilters()}\r\n            </div>\r\n            <div>\r\n              <h4>Prework Level</h4>\r\n              {buildPreworkLevelsFilters()}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-9\">\r\n                <h2 className=\"pageTitle\">Games</h2>\r\n              </div>\r\n              <div className=\"col-sm-3\">\r\n                <div className=\"buttonDiv\">\r\n                  <Link to='/games/new' className=\"mainButtons p-2\">Add New Game</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-wrap\">\r\n              {\r\n                this.state.filteredGamesList.length > 0\r\n                  ? buildGames()\r\n                  : <h66>No games match your search criteria. Please try again.</h66>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Games;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyPracticePlans\\MyPracticePlans.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SinglePracticePlanView\\SinglePracticePlanView.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Login\\Login.js",["214","215"],"import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nimport './Login.scss';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n\r\n  loginClickEvent = (e) => {\r\n    const { user } = this.state;\r\n    e.preventDefault();\r\n    authData\r\n      .loginUser(user)\r\n      .then(() => {\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error while logging in.', error);\r\n      });\r\n  };\r\n\r\n  emailChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.email = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  passwordChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.password = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <div className=\"Login text-center\" {...this.props}>\r\n        <div id=\"login-form\">\r\n          <h2>Log In</h2>\r\n          <div className=\"form-group\">\r\n              <div className=\"col-sm-12\">\r\n                <Link to=\"/register\" className=\"link\">Need to Register?</Link>\r\n              </div>\r\n            </div>\r\n          <form className=\"form-horizontal w-50 mx-auto\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputEmail\" className=\"col-sm-4\">\r\n                Email:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail\"\r\n                  placeholder=\"Email\"\r\n                  value={user.email}\r\n                  onChange={this.emailChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-4\">\r\n                Password:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={this.passwordChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"col-sm-12 buttonDiv\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mainButtons p-2\"\r\n                  onClick={this.loginClickEvent}\r\n                >\r\n                  Log In\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js",["216","217","218"],"import React from 'react';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport logo from '../../../images_backend_capstone/unlimited_logo.png';\r\n\r\nimport './MyNavbar.scss';\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nclass MyNavbar extends React.Component {\r\n  static propTypes = {\r\n    authed: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  state = {\r\n    isOpen: false,\r\n    user: {},\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  logoutClickEvent = (e) => {\r\n    sessionStorage.removeItem('token');\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    const buildNavbar = () => {\r\n      const { authed } = this.props;\r\n      if (authed) {\r\n        return (\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/home\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/practiceplans\">Practice Plans</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/profile\">Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" onClick={this.logoutClickEvent} className=\"pointerHand\">Log Out</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        );\r\n      }\r\n      return <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" className=\"navLinks\" tag={RRNavLink} to=\"/home\">Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/games\">Games</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/login\">Log In</NavLink>\r\n          </NavItem>\r\n        </Nav>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"MyNavbar content\">\r\n          <Navbar className=\"nav sticky navbar-light\" id=\"navbar\" expand=\"md\">\r\n              <NavbarBrand href=\"/\">\r\n                  <img src={logo} width=\"150\" alt=\"company logo\" />\r\n              </NavbarBrand>\r\n              <NavbarToggler onClick={this.toggle} />\r\n              <Collapse isOpen={isOpen} navbar>\r\n                { buildNavbar() }\r\n              </Collapse>\r\n          </Navbar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNavbar;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\authData.js",["219"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\n// interceptors work by changing the outbound request before the xhr is sent\r\n// or by changing the response before it's returned to our .then() method.\r\naxios.interceptors.request.use((request) => {\r\n  const token = sessionStorage.getItem('token');\r\n  if (token != null) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return request;\r\n}, (err) => Promise.reject(err));\r\n\r\n// sub out whatever auth method firebase provides that you want to use.\r\nconst registerUser = (user) => firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n  .then((cred) => {\r\n    // get email and other user data from firebase\r\n    const userInfo = {\r\n      firebaseUid: firebase.auth().currentUser.uid,\r\n      email: user.email,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      photoUrl: user.photoUrl,\r\n    };\r\n\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token))\r\n      // save the user to the the api\r\n      .then(() => {\r\n        axios.post(`${baseUrl}/users`, userInfo);\r\n      });\r\n  });\r\n\r\n// sub out whatever auth method firebase provides that you want to use.\r\nconst loginUser = (user) => firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n  .then((cred) => {\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token));\r\n  });\r\nconst logoutUser = () => firebase.auth().signOut();\r\n\r\nconst getUid = () => firebase.auth().currentUser.uid;\r\n\r\nexport default {\r\n  getUid,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlansData.js",["220"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getUserPracticePlans = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/practiceplans`)\r\n    .then((userPracticePlansResponse) => {\r\n      resolve(userPracticePlansResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getSinglePracticePlan = (planId) => axios.get(`${baseUrl}/practiceplans/${planId}`);\r\n\r\nconst updatePracticePlan = (planId, updatedPracticePlan) => axios.put(`${baseUrl}/practiceplans/${planId}`, updatedPracticePlan);\r\n\r\nconst createPracticePlan = (newPracticePlan) => axios.post(`${baseUrl}/practiceplans`, newPracticePlan);\r\n\r\nexport default {\r\n  getUserPracticePlans,\r\n  getSinglePracticePlan,\r\n  updatePracticePlan,\r\n  createPracticePlan,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanItem\\PracticePlanItem.js",["221"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport practicePlanShape from '../../../helpers/propz/practicePlanShape';\r\nimport SinglePracticePlanView from '../../pages/SinglePracticePlanView/SinglePracticePlanView';\r\n\r\nimport './PracticePlanItem.scss';\r\n\r\nclass PracticePlanItem extends React.Component {\r\n  static propTypes = {\r\n    practicePlanItem: practicePlanShape.practicePlanShape,\r\n  }\r\n\r\n  render() {\r\n    const { practicePlanItem } = this.props;\r\n    const singleLink = `/practiceplans/${practicePlanItem.id}`;\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{practicePlanItem.name}</th>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanItem.startDate}</td>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanItem.endDate}</td>\r\n          <td><Link to={singleLink} className=\"iconButtons\"><i className=\"fas fa-eye\"></i></Link></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanGameItem\\PracticePlanGameItem.js",["222"],"import React from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport practicePlanGamesData from '../../../helpers/data/practicePlanGamesData';\r\n\r\nimport practicePlanGameShape from '../../../helpers/propz/practicePlanGameShape';\r\n\r\nimport './PracticePlanGameItem.scss';\r\n\r\nclass PracticePlanGameItem extends React.Component {\r\n  static propTypes = {\r\n    practicePlanGame: practicePlanGameShape.practicePlanGameShape,\r\n    practicePlanId: PropTypes.number.isRequired,\r\n    refreshPage: PropTypes.func,\r\n  }\r\n\r\n  state = {\r\n    gameId: this.props.practicePlanGame.id,\r\n    practiceCompleted: this.props.practicePlanGame.isCompleted,\r\n  }\r\n\r\n  inactivateRecord = (e) => {\r\n    const { practicePlanGame, practicePlanId } = this.props;\r\n    const { gameId, practiceCompleted } = this.state;\r\n    const updatedObject = {\r\n      id: gameId,\r\n      isActive: false,\r\n      practicePlanId,\r\n      name: practicePlanGame.practiceName,\r\n      practiceDate: practicePlanGame.practiceDate,\r\n      userNotes: practicePlanGame.userNotes,\r\n      isCompleted: this.state.practicePlanGame,\r\n    };\r\n    practicePlanGamesData.updatePracticePlanGame(gameId, updatedObject)\r\n      .then(() => {\r\n        this.props.refreshPage(practicePlanId);\r\n      })\r\n      .catch((error) => console.error('Could not delete this game from your plan.', error));\r\n  }\r\n\r\n  changePracticeCompleted = (e) => {\r\n    this.setState({ practiceCompleted: e.target.checked });\r\n    const { practicePlanGame, practicePlanId } = this.props;\r\n    const { gameId } = this.state;\r\n    const updatedObject = {\r\n      id: gameId,\r\n      isActive: practicePlanGame.isActive,\r\n      practicePlanId,\r\n      name: practicePlanGame.practiceName,\r\n      practiceDate: practicePlanGame.practiceDate,\r\n      userNotes: practicePlanGame.userNotes,\r\n      isCompleted: e.target.checked,\r\n    };\r\n    practicePlanGamesData.updatePracticePlanGame(gameId, updatedObject)\r\n      .then(() => {\r\n        this.props.refreshPage(practicePlanId);\r\n      })\r\n      .catch((error) => console.error('Could not mark this game complete in your plan.', error));\r\n  }\r\n\r\n  render() {\r\n    const { practicePlanGame } = this.props;\r\n    const { practiceCompleted } = this.state;\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{practicePlanGame.practiceName}</th>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanGame.gameName}</td>\r\n          <td>{practicePlanGame.practiceDate}</td>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanGame.userNotes}</td>\r\n          <td className=\"d-none d-md-table-cell\">\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  id=\"practiceCompleted\"\r\n                  checked={practiceCompleted}\r\n                  onChange={this.changePracticeCompleted}\r\n                />\r\n              </Label>\r\n            </FormGroup>\r\n          </td>\r\n          <td><button className=\"iconButtons\" onClick={this.inactivateRecord}><i class=\"fas fa-trash-alt\"></i></button></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanGameItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlanGamesData.js",["223"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst updatePracticePlanGame = (id, updatedPracticePlanGameRecord) => axios.put(`${baseUrl}/practiceplangames/${id}`, updatedPracticePlanGameRecord);\r\n\r\nexport default { updatePracticePlanGame };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanShape.js",["224"],"import PropTypes from 'prop-types';\r\n\r\nconst practicePlanShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  startDate: PropTypes.string.isRequired,\r\n  endDate: PropTypes.string.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  plannedGames: PropTypes.array,\r\n});\r\n\r\nexport default { practicePlanShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanGameShape.js",["225"],"import PropTypes from 'prop-types';\r\n\r\nconst practicePlanGameShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  practiceName: PropTypes.string.isRequired,\r\n  gameName: PropTypes.string.isRequired,\r\n  practiceDate: PropTypes.string.isRequired,\r\n  userNotes: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  practicePlanId: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default { practicePlanGameShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gamesData.js",["226"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getAllActiveGames = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games/all`)\r\n    .then((gamesResponse) => {\r\n      resolve(gamesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getGamesContributedByAuthedUser = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games/submittedby`)\r\n    .then((userContributedGamesResponse) => {\r\n      resolve(userContributedGamesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\n// Passing in filter values for selected games:\r\nconst getFilteredGames = (searchInput, selectedAges, selectedInstruments, selectedPreworkLevels) => new Promise((resolve, reject) => {\r\n  const buildAgeFilters = () => selectedAges.map((age) => `selectedAges=${age}&`).join('');\r\n  const buildInstrumentFilters = () => selectedInstruments.map((instrument) => `selectedInstruments=${instrument}&`).join('');\r\n  const buildPreworkLevelFilters = () => selectedPreworkLevels.map((preworkLevel) => `selectedPreworkLevels=${preworkLevel}&`).join('');\r\n  axios.get(`${baseUrl}/games?searchInput=${searchInput}&${buildAgeFilters()}&${buildInstrumentFilters()}&${buildPreworkLevelFilters()}`)\r\n    .then((filteredGamesResponse) => {\r\n      resolve(filteredGamesResponse.data);\r\n      console.error('selected filters passed to backend', searchInput, selectedAges, selectedInstruments, selectedPreworkLevels);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getGameById = (id) => axios.get(`${baseUrl}/games/${id}`);\r\n\r\nexport default {\r\n  getAllActiveGames,\r\n  getGameById,\r\n  getFilteredGames,\r\n  getGamesContributedByAuthedUser,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\Footer\\Footer.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\PracticePlanNewOrEdit\\PracticePlanNewOrEdit.js",["227","228","229","230","231","232"],"import React from 'react';\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from 'reactstrap';\r\n\r\nimport PracticePlanGameItem from '../../shared/PracticePlanGameItem/PracticePlanGameItem';\r\n\r\nimport gamesData from '../../../helpers/data/gamesData';\r\nimport practicePlanGamesData from '../../../helpers/data/practicePlanGamesData';\r\nimport practicePlansData from '../../../helpers/data/practicePlansData';\r\n\r\nimport './PracticePlanNewOrEdit.scss';\r\n\r\nclass PracticePlanNew extends React.Component {\r\n  state = {\r\n    newRecordForm: true,\r\n    practicePlanId: this.props.match.params.practiceplanid * 1,\r\n    practicePlanName: '',\r\n    practicePlanStartDate: new Date().toLocaleDateString('en-US'),\r\n    practicePlanEndDate: '',\r\n    practicePlanActive: false,\r\n    gamesList: [],\r\n    gamesDropdownOpen: false,\r\n    gameFormModal: false,\r\n    selectedGameId: 0,\r\n    selectedGame: {},\r\n    practiceGameName: '',\r\n    practiceDate: new Date().toLocaleDateString('en-US'),\r\n    practiceNotes: '',\r\n    practiceCompleted: false,\r\n    selectedGames: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildNewPracticePlanPage();\r\n  }\r\n\r\n  buildNewPracticePlanPage = () => {\r\n    this.getCurrentPracticePlan();\r\n    this.getGamesList();\r\n  }\r\n\r\n  getPracticePlanDetails = () => {\r\n    practicePlansData.getSinglePracticePlan(this.state.practicePlanId)\r\n      .then((practicePlanIdResponse) => {\r\n        if (practicePlanIdResponse.status === 200) {\r\n          this.setState({\r\n            selectedGames: practicePlanIdResponse.data.plannedGames,\r\n            practicePlanName: practicePlanIdResponse.data.name,\r\n            practicePlanStartDate: practicePlanIdResponse.data.startDate,\r\n            practicePlanEndDate: practicePlanIdResponse.data.endDate,\r\n            practicePlanActive: practicePlanIdResponse.data.isActive,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.error('Could not upload practice plan data.', error));\r\n  }\r\n\r\n  getCurrentPracticePlan = () => {\r\n    if (this.props.match.params.practiceplanid === undefined) {\r\n      this.setState({ practicePlanId: 0, newRecordForm: true });\r\n    } else {\r\n      this.setState({\r\n        practicePlanId: this.props.match.params.practiceplanid * 1,\r\n        newRecordForm: false,\r\n      });\r\n      this.getPracticePlanDetails();\r\n    }\r\n  }\r\n\r\n  getGamesList = () => {\r\n    gamesData.getAllActiveGames()\r\n      .then((gamesListResponse) => {\r\n        this.setState({ gamesList: gamesListResponse });\r\n      })\r\n      .catch((error) => console.error('Unable to get list of games.', error));\r\n  }\r\n\r\n  cancelAction = () => {\r\n    this.props.history.push('/practiceplans');\r\n  }\r\n\r\n  // change functions for the fields on the new practice plan form:\r\n  changePracticePlanName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practicePlanName: e.target.value });\r\n  }\r\n\r\n  changePracticePlanStartDate = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practicePlanStartDate: e.target.value });\r\n  }\r\n\r\n  changePracticePlanEndDate = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practicePlanEndDate: e.target.value });\r\n  }\r\n\r\n  saveNewPracticePlan = (e) => {\r\n    const {\r\n      practicePlanName,\r\n      practicePlanStartDate,\r\n      practicePlanEndDate,\r\n    } = this.state;\r\n    e.preventDefault();\r\n    const newPracticePlan = {\r\n      name: practicePlanName,\r\n      startDate: practicePlanStartDate,\r\n      endDate: practicePlanEndDate,\r\n    };\r\n    practicePlansData.createPracticePlan(newPracticePlan)\r\n      .then((newPracticePlanResponse) => {\r\n        this.setState({ practicePlanId: newPracticePlanResponse.data, newRecordForm: false });\r\n      })\r\n      .catch((error) => console.error('Unable to create this practice plan.', error));\r\n  }\r\n\r\n  // functions for the edit-version of this form:\r\n  saveUpdatedPracticePlan = (e) => {\r\n    const {\r\n      practicePlanId,\r\n      practicePlanName,\r\n      practicePlanStartDate,\r\n      practicePlanEndDate,\r\n      practicePlanActive,\r\n      selectedGames,\r\n    } = this.state;\r\n    e.preventDefault();\r\n    const updatedPracticePlan = {\r\n      planId: practicePlanId,\r\n      name: practicePlanName,\r\n      startDate: practicePlanStartDate,\r\n      endDate: practicePlanEndDate,\r\n      isActive: practicePlanActive,\r\n    };\r\n    practicePlansData.updatePracticePlan(practicePlanId, updatedPracticePlan)\r\n      .then(() => {\r\n        this.props.history.push(`/practiceplans/${practicePlanId}`);\r\n      })\r\n      .catch((error) => console.error('Unable to update practice plan details.', error));\r\n  }\r\n\r\n  toggleGamesDropdown = () => {\r\n    this.setState({ gamesDropdownOpen: !this.state.gamesDropdownOpen });\r\n  }\r\n\r\n  // functions for the new practice plan game form on the modal:\r\n  toggleGameFormModal = () => {\r\n    this.setState({ gameFormModal: !this.state.gameFormModal });\r\n  }\r\n\r\n  closeGameFormModal = () => {\r\n    this.setState({ gameFormModal: false });\r\n  }\r\n\r\n  getGameForm = (e) => {\r\n    this.setState({ gameFormModal: true });\r\n    gamesData.getGameById(e.target.value)\r\n      .then((singleGameResponse) => {\r\n        this.setState({\r\n          selectedGame: singleGameResponse.data,\r\n          selectedGameId: singleGameResponse.data.id,\r\n          practiceGameName: singleGameResponse.data.name,\r\n        });\r\n      });\r\n  };\r\n\r\n  changePracticeGameName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceGameName: e.target.value });\r\n  }\r\n\r\n  changePracticeDate = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceDate: e.target.value });\r\n  }\r\n\r\n  changePracticeNotes = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceNotes: e.target.value });\r\n  }\r\n\r\n  changePracticeCompleted = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ practiceCompleted: e.target.checked });\r\n  }\r\n\r\n  savePracticePlanGame = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      practiceGameName,\r\n      practiceDate,\r\n      practiceNotes,\r\n      practiceCompleted,\r\n      selectedGameId,\r\n      practicePlanId,\r\n      selectedGame,\r\n    } = this.state;\r\n    if (practiceGameName == '') {\r\n      this.setState({ practiceGameName: selectedGame.name });\r\n    }\r\n    if (practiceDate == '') {\r\n      this.setState({ practiceDate: new Date() });\r\n    }\r\n    const newPracticePlanGame = {\r\n      name: this.state.practiceGameName,\r\n      practiceDate: this.state.practiceDate,\r\n      userNotes: practiceNotes,\r\n      isCompleted: practiceCompleted,\r\n      practicePlanId,\r\n      gameId: selectedGameId,\r\n    };\r\n    practicePlanGamesData.createNewPracticePlanGame(newPracticePlanGame)\r\n      .then((newPpgResponse) => {\r\n        this.closeGameFormModal();\r\n        this.getPracticePlanDetails();\r\n      })\r\n      .catch((error) => console.error('Could not add the game selected to your practice plan.', error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      newRecordForm,\r\n      practicePlanId,\r\n      practicePlanName,\r\n      practicePlanStartDate,\r\n      practicePlanEndDate,\r\n      gamesList,\r\n      gamesDropdownOpen,\r\n      gameFormModal,\r\n      practiceGameName,\r\n      practiceDate,\r\n      practiceNotes,\r\n      practiceCompleted,\r\n      selectedGame,\r\n      selectedGames,\r\n    } = this.state;\r\n\r\n    const buildGamesDropdownOptions = () => gamesList.map((game) => (\r\n      <DropdownItem key={game.id} value={game.id} game={game} onClick={this.getGameForm}>{game.name}</DropdownItem>\r\n    ));\r\n\r\n    const buildGamesGrid = () => selectedGames.map((item) => (\r\n      <PracticePlanGameItem key={item.id} practicePlanGame={item} practicePlanId={item.practicePlanId} refreshPage={this.buildNewPracticePlanPage} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"PracticePlanNew\">\r\n        {\r\n          (newRecordForm === true)\r\n            ? <h2 className=\"pageTitle\">Add New Practice Plan</h2>\r\n            : <h2 className=\"pageTitle\">Update Practice Plan: {practicePlanName}</h2>\r\n        }\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            {/* form for new practice plan info OR practice plan info to be edited below: */}\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"practiceName\">Name</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                    name=\"practiceName\"\r\n                    id=\"practiceName\"\r\n                    placeholder=\"Give it a name!\"\r\n                    value={practicePlanName}\r\n                    onChange={this.changePracticePlanName}\r\n                  />\r\n              </FormGroup>\r\n\r\n              { (newRecordForm === true)\r\n                ? <FormGroup>\r\n                <Label for=\"practicePlanStartDate\">Start Date (MM/DD/YYYY)</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                  name=\"practicePlanStartDate\"\r\n                  defaultValue={new Date().toLocaleDateString('en-US')}\r\n                  id=\"practicePlanStartDate\"\r\n                  onChange={this.changePracticePlanStartDate}\r\n                />\r\n              </FormGroup>\r\n                : <FormGroup>\r\n                <Label for=\"practicePlanStartDate\">Start Date (MM/DD/YYYY)</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                  name=\"practicePlanStartDate\"\r\n                  value={practicePlanStartDate}\r\n                  id=\"practicePlanStartDate\"\r\n                  onChange={this.changePracticePlanStartDate}\r\n                />\r\n              </FormGroup>\r\n              }\r\n\r\n              <FormGroup>\r\n                <Label for=\"practicePlanEndDate\">End Date (MM/DD/YYYY)</Label>\r\n                <Input\r\n                  type=\"input\"\r\n                  name=\"practicePlanEndDate\"\r\n                  id=\"practicePlanEndDate\"\r\n                  value={practicePlanEndDate}\r\n                  onChange={this.changePracticePlanEndDate}\r\n                />\r\n              </FormGroup>\r\n              {\r\n                newRecordForm === true\r\n                  ? <Button onClick={this.saveNewPracticePlan}>Save and Add Games</Button>\r\n                  : <Button onClick={this.saveUpdatedPracticePlan}>Save Changes</Button>\r\n              }\r\n              <Button onClick={this.cancelAction}>Cancel</Button>\r\n            </Form>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n          {\r\n            newRecordForm === false\r\n              ? <FormGroup>\r\n                  <Dropdown isOpen={gamesDropdownOpen} toggle={this.toggleGamesDropdown}>\r\n                    <DropdownToggle caret>\r\n                      Add Game\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      {buildGamesDropdownOptions()}\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </FormGroup>\r\n              : ''\r\n          }\r\n              <div/>\r\n              <div className=\"row\">\r\n                {\r\n                  this.state.selectedGames.length === 0\r\n                    ? ''\r\n                    : <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Practice Game</th>\r\n              <th className=\"d-none d-md-table-cell\">Original Game</th>\r\n              <th>Practice Date</th>\r\n              <th className=\"d-none d-md-table-cell\">Our Notes</th>\r\n              <th className=\"d-none d-md-table-cell\">Done?</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          {buildGamesGrid()}\r\n        </Table>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n          {/* code for modal about the game selected below: */}\r\n          <Modal isOpen={this.state.gameFormModal} toggle={this.toggleGameFormModal}>\r\n            <ModalHeader toggle={this.toggleGameFormModal}>Details for Selected Game: {this.state.selectedGame.name}</ModalHeader>\r\n            <ModalBody>\r\n              <div>\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for=\"practiceName\">Practice Game Name (customize as needed)</Label>\r\n                  <Input\r\n                    type=\"input\"\r\n                    name=\"practiceName\"\r\n                    value={practiceGameName}\r\n                    id=\"practiceName\"\r\n                    onChange={this.changePracticeGameName}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"practiceDate\">Practice Date (MM/DD/YYYY)</Label>\r\n                  <Input\r\n                    type=\"input\"\r\n                    name=\"practiceDate\"\r\n                    value={practiceDate}\r\n                    id=\"practiceDate\"\r\n                    onChange={this.changePracticeDate}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"userNotes\">Notes</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"userNotes\"\r\n                    id=\"userNotes\"\r\n                    placeholder=\"Anything specific to remember for this practice?\"\r\n                    value={practiceNotes}\r\n                    onChange={this.changePracticeNotes}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      id=\"isCompleted\"\r\n                      value={practiceCompleted}\r\n                      onChange={this.changePracticeCompleted}\r\n                    />{' '}\r\n                    Already completed this practice?\r\n                  </Label>\r\n                </FormGroup>\r\n              </Form>\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button onClick={this.savePracticePlanGame}>Save Game</Button>\r\n              <Button onClick={this.closeGameFormModal}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanNew;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameItem\\GameItem.js",["233"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from 'reactstrap';\r\n\r\nimport AgeItem from '../AgeItem/AgeItem';\r\nimport InstrumentItem from '../InstrumentItem/InstrumentItem';\r\n\r\nimport gameItemShape from '../../../helpers/propz/gameItemShape';\r\n\r\nimport './GameItem.scss';\r\n\r\nclass GameItem extends React.Component {\r\n  static propTypes = {\r\n    gameItem: gameItemShape.gameItemShape,\r\n  }\r\n\r\n  render() {\r\n    const { gameItem } = this.props;\r\n    const singleGameLink = `/games/${gameItem.id}`;\r\n\r\n    const displayInstruments = () => gameItem.instrumentsForGame.map((instrument) => (\r\n      <InstrumentItem key={instrument.id} instrument={instrument} />\r\n    ));\r\n\r\n    const displayAges = () => gameItem.agesForGame.map((age) => (\r\n      <AgeItem key={age.id} age={age} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"col-md-4 gameCard\">\r\n        <Card>\r\n        <CardHeader className=\"gameCardHeader\">\r\n          <div className=\"gameIcon\"><i className={gameItem.gameIconHtml}></i></div>\r\n          <div className=\"gameCardHeaderTitle\">{gameItem.name}</div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\"></CardTitle>\r\n          <CardText>\r\n            <div><h6><span className=\"label\">Instruments: </span></h6>{displayInstruments()}</div>\r\n            <h6><span className=\"label\">Prework Level: </span>{gameItem.preworkLevelName}</h6>\r\n            <div><h6><span className=\"label\">Ages: </span></h6>{displayAges()}</div>\r\n            <div><h6><span className=\"label\">Keywords: </span>{gameItem.keywords}</h6></div>\r\n          </CardText>\r\n        </CardBody>\r\n        <CardFooter className=\"cardFooter\">\r\n          <Link to={singleGameLink} className=\"iconButtons doubleSize\"><i className=\"fas fa-binoculars\"></i></Link>\r\n        </CardFooter>\r\n      </Card>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\gameItemShape.js",["234"],"import PropTypes from 'prop-types';\r\n\r\nconst gameItemShape = PropTypes.shape({\r\n  agesForGame: PropTypes.array.isRequired,\r\n  credit: PropTypes.string,\r\n  dateCreated: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  gameIconId: PropTypes.number,\r\n  gameIconHtml: PropTypes.string,\r\n  gameIconUrl: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  instructions: PropTypes.string,\r\n  instrumentsForGame: PropTypes.array.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  keywords: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  overallRating: PropTypes.number,\r\n  prework: PropTypes.string,\r\n  preworkLevelId: PropTypes.number.isRequired,\r\n  preworkLevelName: PropTypes.string.isRequired,\r\n  songs: PropTypes.string,\r\n  submittedByUserId: PropTypes.number,\r\n  userFirstName: PropTypes.string,\r\n  userLastName: PropTypes.string,\r\n  websiteUrl: PropTypes.string,\r\n});\r\n\r\nexport default { gameItemShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentItem\\InstrumentItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\instrumentShape.js",["235"],"import PropTypes from 'prop-types';\r\n\r\nconst instrumentShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { instrumentShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeItem\\AgeItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\ageShape.js",["236"],"import PropTypes from 'prop-types';\r\n\r\nconst ageShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { ageShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\usersData.js",["237"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getSingleUser = () => axios.get(`${baseUrl}/users/user`);\r\n\r\nexport default { getSingleUser };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\agesData.js",["238"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getAgesList = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/ages`)\r\n    .then((agesResponse) => {\r\n      resolve(agesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getAgesList };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\instrumentsData.js",["239"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getInstrumentsList = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/instruments`)\r\n    .then((instrumentsResponse) => {\r\n      resolve(instrumentsResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getInstrumentsList };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\preworkLevelsData.js",["240"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getPreworkLevelsList = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/preworkLevels`)\r\n    .then((preworkLevelsResponse) => {\r\n      resolve(preworkLevelsResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getPreworkLevelsList };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeFilterItem\\AgeFilterItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentFilterItem\\InstrumentFilterItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PreworkLevelFilterItem\\PreworkLevelFilterItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\preworkLevelShape.js",["241"],"import PropTypes from 'prop-types';\r\n\r\nconst preworkLevelShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { preworkLevelShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\userShape.js",["242"],"import PropTypes from 'prop-types';\r\n\r\nconst userShape = PropTypes.shape({\r\n  activeDate: PropTypes.string,\r\n  dateCreated: PropTypes.string,\r\n  email: PropTypes.string.isRequired,\r\n  firebaseUid: PropTypes.string,\r\n  firstName: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  isActive: PropTypes.bool,\r\n  lastName: PropTypes.string,\r\n  password: PropTypes.string,\r\n  photoUrl: PropTypes.string,\r\n});\r\n\r\nexport default { userShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyContributions\\MyContributions.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameContributedItem\\GameContributedItem.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":22,"column":8,"nodeType":"261","messageId":"262","endLine":22,"endColumn":23},{"ruleId":"259","severity":1,"message":"263","line":4,"column":8,"nodeType":"261","messageId":"262","endLine":4,"endColumn":16},{"ruleId":"259","severity":1,"message":"264","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":42,"column":15,"nodeType":"267","endLine":42,"endColumn":80},{"ruleId":"268","severity":1,"message":"269","line":67,"column":15,"nodeType":"267","endLine":67,"endColumn":102},{"ruleId":"270","severity":1,"message":"271","line":73,"column":37,"nodeType":"272","messageId":"273","endLine":73,"endColumn":39},{"ruleId":"268","severity":1,"message":"269","line":85,"column":19,"nodeType":"267","endLine":85,"endColumn":103},{"ruleId":"270","severity":1,"message":"271","line":99,"column":33,"nodeType":"272","messageId":"273","endLine":99,"endColumn":35},{"ruleId":"274","severity":1,"message":"275","line":103,"column":51,"nodeType":"276","endLine":103,"endColumn":66},{"ruleId":"259","severity":1,"message":"277","line":16,"column":8,"nodeType":"261","messageId":"262","endLine":16,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":50,"column":5,"nodeType":"280","messageId":"281","endLine":50,"endColumn":53},{"ruleId":"259","severity":1,"message":"282","line":166,"column":7,"nodeType":"261","messageId":"262","endLine":166,"endColumn":19},{"ruleId":"259","severity":1,"message":"283","line":167,"column":7,"nodeType":"261","messageId":"262","endLine":167,"endColumn":26},{"ruleId":"259","severity":1,"message":"284","line":168,"column":7,"nodeType":"261","messageId":"262","endLine":168,"endColumn":28},{"ruleId":"259","severity":1,"message":"285","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":16},{"ruleId":"259","severity":1,"message":"286","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":17},{"ruleId":"259","severity":1,"message":"263","line":21,"column":8,"nodeType":"261","messageId":"262","endLine":21,"endColumn":16},{"ruleId":"287","severity":1,"message":"288","line":63,"column":77,"nodeType":"276","endLine":63,"endColumn":100},{"ruleId":"287","severity":1,"message":"288","line":70,"column":43,"nodeType":"276","endLine":70,"endColumn":63},{"ruleId":"289","severity":1,"message":"290","line":63,"column":1,"nodeType":"291","endLine":68,"endColumn":3},{"ruleId":"289","severity":1,"message":"290","line":20,"column":1,"nodeType":"291","endLine":26,"endColumn":3},{"ruleId":"259","severity":1,"message":"292","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":30},{"ruleId":"259","severity":1,"message":"293","line":26,"column":21,"nodeType":"261","messageId":"262","endLine":26,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":8,"column":1,"nodeType":"291","endLine":8,"endColumn":70},{"ruleId":"289","severity":1,"message":"290","line":13,"column":1,"nodeType":"291","endLine":13,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":14,"column":1,"nodeType":"291","endLine":14,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":35,"column":1,"nodeType":"291","endLine":40,"endColumn":3},{"ruleId":"259","severity":1,"message":"294","line":140,"column":7,"nodeType":"261","messageId":"262","endLine":140,"endColumn":20},{"ruleId":"270","severity":1,"message":"295","line":213,"column":26,"nodeType":"272","messageId":"273","endLine":213,"endColumn":28},{"ruleId":"270","severity":1,"message":"295","line":216,"column":22,"nodeType":"272","messageId":"273","endLine":216,"endColumn":24},{"ruleId":"259","severity":1,"message":"296","line":238,"column":7,"nodeType":"261","messageId":"262","endLine":238,"endColumn":21},{"ruleId":"259","severity":1,"message":"297","line":244,"column":7,"nodeType":"261","messageId":"262","endLine":244,"endColumn":20},{"ruleId":"259","severity":1,"message":"298","line":249,"column":7,"nodeType":"261","messageId":"262","endLine":249,"endColumn":19},{"ruleId":"259","severity":1,"message":"299","line":5,"column":3,"nodeType":"261","messageId":"262","endLine":5,"endColumn":9},{"ruleId":"289","severity":1,"message":"290","line":28,"column":1,"nodeType":"291","endLine":28,"endColumn":34},{"ruleId":"289","severity":1,"message":"290","line":9,"column":1,"nodeType":"291","endLine":9,"endColumn":36},{"ruleId":"289","severity":1,"message":"290","line":9,"column":1,"nodeType":"291","endLine":9,"endColumn":29},{"ruleId":"289","severity":1,"message":"290","line":6,"column":1,"nodeType":"291","endLine":6,"endColumn":34},{"ruleId":"289","severity":1,"message":"290","line":12,"column":1,"nodeType":"291","endLine":12,"endColumn":32},{"ruleId":"289","severity":1,"message":"290","line":12,"column":1,"nodeType":"291","endLine":12,"endColumn":39},{"ruleId":"289","severity":1,"message":"290","line":12,"column":1,"nodeType":"291","endLine":12,"endColumn":41},{"ruleId":"289","severity":1,"message":"290","line":9,"column":1,"nodeType":"291","endLine":9,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":16,"column":1,"nodeType":"291","endLine":16,"endColumn":30},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"lines-around-directive",["302"],"no-spaced-func",["303"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'MyContributions' is defined but never used.","Identifier","unusedVar","'authData' is defined but never used.","'usersData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'ageShape' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'selectedAges' is assigned a value but never used.","'selectedInstruments' is assigned a value but never used.","'selectedPreworkLevels' is assigned a value but never used.","'firebase' is defined but never used.","'PropTypes' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'SinglePracticePlanView' is defined but never used.","'practiceCompleted' is assigned a value but never used.","'selectedGames' is assigned a value but never used.","Expected '===' and instead saw '=='.","'practicePlanId' is assigned a value but never used.","'gameFormModal' is assigned a value but never used.","'selectedGame' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements","func-call-spacing"]