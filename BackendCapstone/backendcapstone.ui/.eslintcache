[{"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\index.js":"1","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\App\\App.js":"2","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\connection.js":"3","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Home\\Home.js":"4","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Profile\\Profile.js":"5","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SingleGameView\\SingleGameView.js":"6","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Register\\Register.js":"7","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Games\\Games.js":"8","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyPracticePlans\\MyPracticePlans.js":"9","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SinglePracticePlanView\\SinglePracticePlanView.js":"10","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Login\\Login.js":"11","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js":"12","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\authData.js":"13","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlansData.js":"14","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanItem\\PracticePlanItem.js":"15","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanGameItem\\PracticePlanGameItem.js":"16","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlanGamesData.js":"17","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanShape.js":"18","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanGameShape.js":"19","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gamesData.js":"20","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\Footer\\Footer.js":"21","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\PracticePlanNewOrEdit\\PracticePlanNewOrEdit.js":"22","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameItem\\GameItem.js":"23","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\gameItemShape.js":"24","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentItem\\InstrumentItem.js":"25","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\instrumentShape.js":"26","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeItem\\AgeItem.js":"27","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\ageShape.js":"28","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\usersData.js":"29","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\agesData.js":"30","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\instrumentsData.js":"31","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\preworkLevelsData.js":"32","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeFilterItem\\AgeFilterItem.js":"33","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentFilterItem\\InstrumentFilterItem.js":"34","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PreworkLevelFilterItem\\PreworkLevelFilterItem.js":"35","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\preworkLevelShape.js":"36","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\userShape.js":"37","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyContributions\\MyContributions.js":"38","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameContributedItem\\GameContributedItem.js":"39","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gameIconsData.js":"40","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameNewOrEdit\\GameNewOrEdit.js":"41"},{"size":243,"mtime":1607189195780,"results":"42","hashOfConfig":"43"},{"size":4312,"mtime":1609532067471,"results":"44","hashOfConfig":"43"},{"size":248,"mtime":1607189195777,"results":"45","hashOfConfig":"43"},{"size":2669,"mtime":1608693913157,"results":"46","hashOfConfig":"43"},{"size":1434,"mtime":1608387901770,"results":"47","hashOfConfig":"43"},{"size":5646,"mtime":1609535381104,"results":"48","hashOfConfig":"43"},{"size":6230,"mtime":1608609678303,"results":"49","hashOfConfig":"43"},{"size":8248,"mtime":1609531996930,"results":"50","hashOfConfig":"43"},{"size":1968,"mtime":1608387901766,"results":"51","hashOfConfig":"43"},{"size":4005,"mtime":1609554607232,"results":"52","hashOfConfig":"43"},{"size":2932,"mtime":1608083894718,"results":"53","hashOfConfig":"43"},{"size":2813,"mtime":1608387901848,"results":"54","hashOfConfig":"43"},{"size":2088,"mtime":1608609191719,"results":"55","hashOfConfig":"43"},{"size":917,"mtime":1608387901878,"results":"56","hashOfConfig":"43"},{"size":1077,"mtime":1609554607243,"results":"57","hashOfConfig":"43"},{"size":4039,"mtime":1609554607237,"results":"58","hashOfConfig":"43"},{"size":732,"mtime":1609554607246,"results":"59","hashOfConfig":"43"},{"size":406,"mtime":1608387901893,"results":"60","hashOfConfig":"43"},{"size":482,"mtime":1607213266557,"results":"61","hashOfConfig":"43"},{"size":2419,"mtime":1609532067478,"results":"62","hashOfConfig":"43"},{"size":532,"mtime":1607661000074,"results":"63","hashOfConfig":"43"},{"size":15106,"mtime":1609554607225,"results":"64","hashOfConfig":"43"},{"size":1973,"mtime":1608387901818,"results":"65","hashOfConfig":"43"},{"size":958,"mtime":1609532067479,"results":"66","hashOfConfig":"43"},{"size":468,"mtime":1607493690751,"results":"67","hashOfConfig":"43"},{"size":230,"mtime":1607493690756,"results":"68","hashOfConfig":"43"},{"size":391,"mtime":1607493690700,"results":"69","hashOfConfig":"43"},{"size":216,"mtime":1607665977283,"results":"70","hashOfConfig":"43"},{"size":277,"mtime":1608609678329,"results":"71","hashOfConfig":"43"},{"size":323,"mtime":1607798817162,"results":"72","hashOfConfig":"43"},{"size":358,"mtime":1607798817164,"results":"73","hashOfConfig":"43"},{"size":368,"mtime":1607798817165,"results":"74","hashOfConfig":"43"},{"size":887,"mtime":1607798817147,"results":"75","hashOfConfig":"43"},{"size":985,"mtime":1607798817158,"results":"76","hashOfConfig":"43"},{"size":1013,"mtime":1607798817160,"results":"77","hashOfConfig":"43"},{"size":234,"mtime":1607798817167,"results":"78","hashOfConfig":"43"},{"size":455,"mtime":1608083894722,"results":"79","hashOfConfig":"43"},{"size":2020,"mtime":1608387901820,"results":"80","hashOfConfig":"43"},{"size":929,"mtime":1608387901814,"results":"81","hashOfConfig":"43"},{"size":340,"mtime":1609273993404,"results":"82","hashOfConfig":"43"},{"size":14923,"mtime":1609536288943,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1j1d2t5",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"86"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"86"},"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\index.js",[],["192","193","194","195","196","197","198","199"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\App\\App.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\connection.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Home\\Home.js",["200","201"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport authData from '../../../helpers/data/authData';\r\nimport gamesData from '../../../helpers/data/gamesData';\r\nimport usersData from '../../../helpers/data/usersData';\r\n\r\nimport userShape from '../../../helpers/propz/userShape';\r\n\r\nimport './Home.scss';\r\n\r\nclass Home extends React.Component {\r\n  static propTypes = {\r\n    authed: PropTypes.bool.isRequired,\r\n    user: userShape.userShape,\r\n  }\r\n\r\n  state = {\r\n    latestGames: [],\r\n    mostPopularGames: [],\r\n  }\r\n\r\n  getLatestGames = () => {\r\n    gamesData.getLatestGames()\r\n      .then((latestGamesResponse) => {\r\n        this.setState({ latestGames: latestGamesResponse });\r\n      })\r\n      .catch((error) => console.error('Could not get latest games.', error));\r\n  }\r\n\r\n  getMostPopularGames = () => {\r\n    gamesData.getMostPopularGames()\r\n      .then((mostPopularGamesResponse) => {\r\n        this.setState({ mostPopularGames: mostPopularGamesResponse });\r\n      })\r\n      .catch((error) => console.error('Could not get most mopoular games.', error));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLatestGames();\r\n    this.getMostPopularGames();\r\n  }\r\n\r\n  render() {\r\n    const { authed, user } = this.props;\r\n    const { latestGames, mostPopularGames } = this.state;\r\n\r\n    const buildLatestGames = () => latestGames.map((game) => (\r\n      <Link to={`/games/${game.id}`} gameId={game.id}>{game.name}<br /></Link>\r\n    ));\r\n\r\n    const buildMostPopularGames = () => mostPopularGames.map((game) => (\r\n      <Link to={`/games/${game.id}`} gameId={game.id}>{game.name}<br /></Link>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"Home\">\r\n        {\r\n          authed ? <h2 className=\"pageTitle\">Welcome to Unlimited, {user.firstName}!</h2> : <h2 className=\"pageTitle\">Welcome to Unlimited!</h2>\r\n        }\r\n        <p>We're glad you're here!</p>\r\n        <h6>Go ahead, check out our <Link to='/games'>database of fun games</Link> for the young musicians in your family.</h6>\r\n        <h6>\r\n          <Link to='/register'>Register</Link> with us and you can take your practice planning to a next level - and will you be glad you did!\r\n        </h6>\r\n        <div className=\"container stats\">\r\n          <div className=\"row d-flex flex-wrap\">\r\n            <div className=\"col-md-6\">\r\n              <h3>Latest Games</h3>\r\n              {buildLatestGames()}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h3>Most Popular Games</h3>\r\n              {buildMostPopularGames()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Profile\\Profile.js",["202"],"import React from 'react';\r\n\r\nimport MyContributions from '../../shared/MyContributions/MyContributions';\r\n\r\nimport usersData from '../../../helpers/data/usersData';\r\n\r\nimport './Profile.scss';\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    user: {},\r\n  }\r\n\r\n  getUser = () => {\r\n    usersData.getSingleUser()\r\n      .then((singleUserResponse) => {\r\n        this.setState({ user: singleUserResponse.data });\r\n        console.error('singleUserResp', singleUserResponse);\r\n      })\r\n      .catch((error) => console.error('Unable to get user data.', error));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <div className=\"Profile\">\r\n        <h2 className=\"pageTitle\">My Profile</h2>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h4>Hello, {user.firstName} {user.lastName}!</h4>\r\n              <p>Active member since: {user.activeDate}</p>\r\n              <p>User ID: {user.id}</p>\r\n              <p>Email: {user.email}</p>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <img src={user.photoUrl} als=\"user photo\" className=\"userPhoto\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <MyContributions />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SingleGameView\\SingleGameView.js",["203","204","205","206","207"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Register\\Register.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Games\\Games.js",["208","209","210","211","212"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\MyPracticePlans\\MyPracticePlans.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\SinglePracticePlanView\\SinglePracticePlanView.js",["213"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport PracticePlanGameItem from '../../shared/PracticePlanGameItem/PracticePlanGameItem';\r\n\r\nimport practicePlansData from '../../../helpers/data/practicePlansData';\r\n\r\nimport './SinglePracticePlanView.scss';\r\n\r\nclass SinglePracticePlanView extends React.Component {\r\n  static propTypes = {\r\n    practiceplanid: PropTypes.number.isRequired,\r\n  }\r\n\r\n  state = {\r\n    selectedPracticePlan: {},\r\n    selectedGames: [],\r\n  }\r\n\r\n  buildSingleView = () => {\r\n    const { practiceplanid } = this.props.match.params;\r\n    practicePlansData.getSinglePracticePlan(practiceplanid)\r\n      .then((practicePlanResponse) => {\r\n        this.setState({\r\n          selectedPracticePlan: practicePlanResponse.data,\r\n          selectedGames: practicePlanResponse.data.plannedGames,\r\n        });\r\n      })\r\n      .catch((error) => console.error('Could not get the details of this practice plan.', error));\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { practiceplanid } = this.props.match.params;\r\n    this.buildSingleView(practiceplanid);\r\n  }\r\n\r\n  inactivatePracticePlan = (e) => {\r\n    const { practiceplanid } = this.props.match.params;\r\n    practicePlansData.inactivatePracticePlan(practiceplanid)\r\n      .then(() => {\r\n        this.props.history.push('/practiceplans');\r\n      })\r\n      .catch((error) => console.error('Unable to delete this practice plan.', error));\r\n  }\r\n\r\n  deleteConfirmationMessagePracticePlan = () => {\r\n    Swal.fire({\r\n      title: 'Are you sure you want to delete this practice plan?',\r\n      text: 'You will not be able to undo this action!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#008900',\r\n      cancelButtonColor: '#960018',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your practice plan has been deleted.',\r\n          'success',\r\n        );\r\n        this.inactivatePracticePlan();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { selectedPracticePlan, selectedGames } = this.state;\r\n    const { practiceplanid } = this.props.match.params;\r\n\r\n    const buildGamesGrid = () => selectedGames.map((item) => (\r\n      <PracticePlanGameItem key={item.id} practicePlanGame={item} practicePlanId={item.practicePlanId} refreshPage={this.buildSingleView} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"SinglePracticePlanView container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 text-center\">\r\n            <h2 className=\"pageTitle\">Practice Plan Details: {selectedPracticePlan.name}</h2>\r\n            <h4>{selectedPracticePlan.startDate} - {selectedPracticePlan.endDate}</h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 buttonDiv text-center\">\r\n                <Link to={`/practiceplans/edit/${practiceplanid}`} className=\"mainButtons p-2\">Edit</Link>\r\n              </div>\r\n              <div className=\"col-md-6 buttonDiv text-center\">\r\n                <button className=\"mainButtons p-2\" onClick={this.deleteConfirmationMessagePracticePlan}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 buttonDiv\">\r\n            <Link to='/practiceplans' className=\"mainButtons p-2\">Back</Link>\r\n          </div>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Practice Game</th>\r\n              <th className=\"d-none d-md-table-cell\">Original Game</th>\r\n              <th>Practice Date</th>\r\n              <th className=\"d-none d-md-table-cell\">Our Notes</th>\r\n              <th className=\"d-none d-md-table-cell\">Done?</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          {buildGamesGrid()}\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SinglePracticePlanView;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\Login\\Login.js",["214","215"],"import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nimport './Login.scss';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n\r\n  loginClickEvent = (e) => {\r\n    const { user } = this.state;\r\n    e.preventDefault();\r\n    authData\r\n      .loginUser(user)\r\n      .then(() => {\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error while logging in.', error);\r\n      });\r\n  };\r\n\r\n  emailChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.email = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  passwordChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.password = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <div className=\"Login text-center\" {...this.props}>\r\n        <div id=\"login-form\">\r\n          <h2>Log In</h2>\r\n          <div className=\"form-group\">\r\n              <div className=\"col-sm-12\">\r\n                <Link to=\"/register\" className=\"link\">Need to Register?</Link>\r\n              </div>\r\n            </div>\r\n          <form className=\"form-horizontal w-50 mx-auto\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputEmail\" className=\"col-sm-4\">\r\n                Email:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail\"\r\n                  placeholder=\"Email\"\r\n                  value={user.email}\r\n                  onChange={this.emailChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-4\">\r\n                Password:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={this.passwordChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"col-sm-12 buttonDiv\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mainButtons p-2\"\r\n                  onClick={this.loginClickEvent}\r\n                >\r\n                  Log In\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js",["216","217","218"],"import React from 'react';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport logo from '../../../images_backend_capstone/unlimited_logo.png';\r\n\r\nimport './MyNavbar.scss';\r\nimport authData from '../../../helpers/data/authData';\r\n\r\nclass MyNavbar extends React.Component {\r\n  static propTypes = {\r\n    authed: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  state = {\r\n    isOpen: false,\r\n    user: {},\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  logoutClickEvent = (e) => {\r\n    sessionStorage.removeItem('token');\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    const buildNavbar = () => {\r\n      const { authed } = this.props;\r\n      if (authed) {\r\n        return (\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/home\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/games\">Games</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/practiceplans\">Practice Plans</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/profile\">Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"navLinks\" onClick={this.logoutClickEvent} className=\"pointerHand\">Log Out</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        );\r\n      }\r\n      return <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" className=\"navLinks\" tag={RRNavLink} to=\"/home\">Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/games\">Games</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"navLinks\" tag={RRNavLink} to=\"/login\">Log In</NavLink>\r\n          </NavItem>\r\n        </Nav>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"MyNavbar content\">\r\n          <Navbar className=\"nav sticky navbar-light\" id=\"navbar\" expand=\"md\">\r\n              <NavbarBrand href=\"/\">\r\n                  <img src={logo} width=\"150\" alt=\"company logo\" />\r\n              </NavbarBrand>\r\n              <NavbarToggler onClick={this.toggle} />\r\n              <Collapse isOpen={isOpen} navbar>\r\n                { buildNavbar() }\r\n              </Collapse>\r\n          </Navbar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNavbar;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\authData.js",["219"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\n// interceptors work by changing the outbound request before the xhr is sent\r\n// or by changing the response before it's returned to our .then() method.\r\naxios.interceptors.request.use((request) => {\r\n  const token = sessionStorage.getItem('token');\r\n  if (token != null) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return request;\r\n}, (err) => Promise.reject(err));\r\n\r\n// sub out whatever auth method firebase provides that you want to use.\r\nconst registerUser = (user) => firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n  .then((cred) => {\r\n    // get email and other user data from firebase\r\n    const userInfo = {\r\n      firebaseUid: firebase.auth().currentUser.uid,\r\n      email: user.email,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      photoUrl: user.photoUrl,\r\n    };\r\n\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token))\r\n      // save the user to the the api\r\n      .then(() => {\r\n        axios.post(`${baseUrl}/users`, userInfo);\r\n      });\r\n  });\r\n\r\n// sub out whatever auth method firebase provides that you want to use.\r\nconst loginUser = (user) => firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n  .then((cred) => {\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token));\r\n  });\r\n\r\n// const logoutUser = () => {\r\n//   sessionStorage.removeItem('token');\r\n//   firebase.auth().signOut();\r\n// };\r\n\r\nconst getUid = () => {\r\n  const token = sessionStorage.getItem('token');\r\n  let uid = '';\r\n\r\n  if (token != null) {\r\n    uid = firebase.auth().currentUser.uid;\r\n  }\r\n  return uid;\r\n};\r\n\r\nexport default {\r\n  getUid,\r\n  loginUser,\r\n  // logoutUser,\r\n  registerUser,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlansData.js",["220"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getUserPracticePlans = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/practiceplans`)\r\n    .then((userPracticePlansResponse) => {\r\n      resolve(userPracticePlansResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getSinglePracticePlan = (planId) => axios.get(`${baseUrl}/practiceplans/${planId}`);\r\n\r\nconst updatePracticePlan = (planId, updatedPracticePlan) => axios.put(`${baseUrl}/practiceplans/${planId}`, updatedPracticePlan);\r\n\r\nconst createPracticePlan = (newPracticePlan) => axios.post(`${baseUrl}/practiceplans`, newPracticePlan);\r\n\r\nconst inactivatePracticePlan = (planId) => axios.put(`${baseUrl}/practiceplans/delete/${planId}`);\r\n\r\nexport default {\r\n  getUserPracticePlans,\r\n  getSinglePracticePlan,\r\n  updatePracticePlan,\r\n  createPracticePlan,\r\n  inactivatePracticePlan,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanItem\\PracticePlanItem.js",["221"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'moment';\r\n\r\nimport practicePlanShape from '../../../helpers/propz/practicePlanShape';\r\nimport SinglePracticePlanView from '../../pages/SinglePracticePlanView/SinglePracticePlanView';\r\n\r\nimport './PracticePlanItem.scss';\r\n\r\nclass PracticePlanItem extends React.Component {\r\n  static propTypes = {\r\n    practicePlanItem: practicePlanShape.practicePlanShape,\r\n  }\r\n\r\n  render() {\r\n    const { practicePlanItem } = this.props;\r\n    const singleLink = `/practiceplans/${practicePlanItem.planId}`;\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{practicePlanItem.name}</th>\r\n          <td className=\"d-none d-md-table-cell\">{Moment(practicePlanItem.startDate).format('L')}</td>\r\n          <td className=\"d-none d-md-table-cell\">{Moment(practicePlanItem.endDate).format('L')}</td>\r\n          <td><Link to={singleLink} className=\"iconButtons\"><i className=\"fas fa-eye\"></i></Link></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PracticePlanGameItem\\PracticePlanGameItem.js",["222"],"import React from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport practicePlanGamesData from '../../../helpers/data/practicePlanGamesData';\r\n\r\nimport practicePlanGameShape from '../../../helpers/propz/practicePlanGameShape';\r\n\r\nimport './PracticePlanGameItem.scss';\r\n\r\nclass PracticePlanGameItem extends React.Component {\r\n  static propTypes = {\r\n    practicePlanGame: practicePlanGameShape.practicePlanGameShape,\r\n    practicePlanId: PropTypes.number.isRequired,\r\n    refreshPage: PropTypes.func,\r\n  }\r\n\r\n  state = {\r\n    gameId: this.props.practicePlanGame.id,\r\n    practiceCompleted: this.props.practicePlanGame.isCompleted,\r\n    practicePlanId: this.props.practicePlanId,\r\n  }\r\n\r\n  inactivateRecord = (e) => {\r\n    const { practicePlanGame, practicePlanId } = this.props;\r\n    const { gameId, practiceCompleted } = this.state;\r\n    const updatedObject = {\r\n      id: gameId,\r\n      isActive: false,\r\n      practicePlanId,\r\n      name: practicePlanGame.practiceName,\r\n      practiceDate: practicePlanGame.practiceDate,\r\n      userNotes: practicePlanGame.userNotes,\r\n      isCompleted: this.state.practicePlanGame,\r\n    };\r\n    practicePlanGamesData.updatePracticePlanGame(gameId, updatedObject)\r\n      .then(() => {\r\n        this.props.refreshPage(practicePlanId);\r\n      })\r\n      .catch((error) => console.error('Could not delete this game from your plan.', error));\r\n  }\r\n\r\n  deleteConfirmationMessagePracticePlanGame = () => {\r\n    Swal.fire({\r\n      title: 'Are you sure you want to delete this game from your practice plan?',\r\n      text: 'You will not be able to undo this action!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#008900',\r\n      cancelButtonColor: '#960018',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.fire(\r\n          'Deleted!',\r\n          'This game has been removed from your practice plan.',\r\n          'success',\r\n        );\r\n        this.inactivateRecord();\r\n      }\r\n    });\r\n  }\r\n\r\n  changePracticeCompleted = (e) => {\r\n    this.setState({ practiceCompleted: e.target.checked });\r\n    const { practicePlanGame, practicePlanId } = this.props;\r\n    const { gameId } = this.state;\r\n    const updatedObject = {\r\n      id: gameId,\r\n      isActive: practicePlanGame.isActive,\r\n      practicePlanId,\r\n      name: practicePlanGame.practiceName,\r\n      practiceDate: practicePlanGame.practiceDate,\r\n      userNotes: practicePlanGame.userNotes,\r\n      isCompleted: e.target.checked,\r\n    };\r\n    practicePlanGamesData.updatePracticePlanGame(gameId, updatedObject)\r\n      .then(() => {\r\n        this.props.refreshPage();\r\n      })\r\n      .catch((error) => console.error('Could not mark this game complete in your plan.', error));\r\n  }\r\n\r\n  render() {\r\n    const { practicePlanGame } = this.props;\r\n    const { practiceCompleted } = this.state;\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{practicePlanGame.practiceName}</th>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanGame.gameName}</td>\r\n          <td>{practicePlanGame.practiceDate}</td>\r\n          <td className=\"d-none d-md-table-cell\">{practicePlanGame.userNotes}</td>\r\n          <td className=\"d-none d-md-table-cell\">\r\n            <FormGroup check inline>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  id=\"practiceCompleted\"\r\n                  checked={practiceCompleted}\r\n                  onChange={this.changePracticeCompleted}\r\n                />\r\n              </Label>\r\n            </FormGroup>\r\n          </td>\r\n          <td><button className=\"iconButtons\" onClick={this.deleteConfirmationMessagePracticePlanGame}><i class=\"fas fa-trash-alt\"></i></button></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PracticePlanGameItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\practicePlanGamesData.js",["223"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst updatePracticePlanGame = (id, updatedPracticePlanGameRecord) => axios.put(`${baseUrl}/practiceplangames/${id}`, updatedPracticePlanGameRecord);\r\n\r\nconst createNewPracticePlanGame = (newPracticePlanGameRecord) => axios.post(`${baseUrl}/practiceplangames`, newPracticePlanGameRecord);\r\n\r\nexport default { updatePracticePlanGame, createNewPracticePlanGame };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanShape.js",["224"],"import PropTypes from 'prop-types';\r\n\r\nconst practicePlanShape = PropTypes.shape({\r\n  planId: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  startDate: PropTypes.string.isRequired,\r\n  endDate: PropTypes.string.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  plannedGames: PropTypes.array,\r\n});\r\n\r\nexport default { practicePlanShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\practicePlanGameShape.js",["225"],"import PropTypes from 'prop-types';\r\n\r\nconst practicePlanGameShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  practiceName: PropTypes.string.isRequired,\r\n  gameName: PropTypes.string.isRequired,\r\n  practiceDate: PropTypes.string.isRequired,\r\n  userNotes: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  practicePlanId: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default { practicePlanGameShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gamesData.js",["226"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getAllActiveGames = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games/all`)\r\n    .then((gamesResponse) => {\r\n      resolve(gamesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getLatestGames = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games/latest`)\r\n    .then((latestGamesResponse) => {\r\n      resolve(latestGamesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getMostPopularGames = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games/popular`)\r\n    .then((mostPopularGamesResponse) => {\r\n      resolve(mostPopularGamesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getGamesContributedByAuthedUser = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/games/submittedby`)\r\n    .then((userContributedGamesResponse) => {\r\n      resolve(userContributedGamesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\n// Passing in filter values for selected games:\r\nconst getFilteredGames = (searchInput, selectedAges, selectedInstruments, selectedPreworkLevels) => new Promise((resolve, reject) => {\r\n  const buildAgeFilters = () => selectedAges.map((age) => `selectedAges=${age}&`).join('');\r\n  const buildInstrumentFilters = () => selectedInstruments.map((instrument) => `selectedInstruments=${instrument}&`).join('');\r\n  const buildPreworkLevelFilters = () => selectedPreworkLevels.map((preworkLevel) => `selectedPreworkLevels=${preworkLevel}&`).join('');\r\n  axios.get(`${baseUrl}/games?searchInput=${searchInput}&${buildAgeFilters()}&${buildInstrumentFilters()}&${buildPreworkLevelFilters()}`)\r\n    .then((filteredGamesResponse) => {\r\n      resolve(filteredGamesResponse.data);\r\n      console.error('selected filters passed to backend', searchInput, selectedAges, selectedInstruments, selectedPreworkLevels);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getGameById = (id) => axios.get(`${baseUrl}/games/${id}`);\r\n\r\nconst addGame = (newGame) => axios.post(`${baseUrl}/games`, newGame);\r\n\r\nconst deleteGame = (gameId) => axios.delete(`${baseUrl}/games/${gameId}`);\r\n\r\nexport default {\r\n  getAllActiveGames,\r\n  getGameById,\r\n  getFilteredGames,\r\n  getGamesContributedByAuthedUser,\r\n  getLatestGames,\r\n  getMostPopularGames,\r\n  addGame,\r\n  deleteGame,\r\n};\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\Footer\\Footer.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\PracticePlanNewOrEdit\\PracticePlanNewOrEdit.js",["227","228","229","230","231","232","233","234"],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameItem\\GameItem.js",["235"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from 'reactstrap';\r\n\r\nimport AgeItem from '../AgeItem/AgeItem';\r\nimport InstrumentItem from '../InstrumentItem/InstrumentItem';\r\n\r\nimport gameItemShape from '../../../helpers/propz/gameItemShape';\r\n\r\nimport './GameItem.scss';\r\n\r\nclass GameItem extends React.Component {\r\n  static propTypes = {\r\n    gameItem: gameItemShape.gameItemShape,\r\n  }\r\n\r\n  render() {\r\n    const { gameItem } = this.props;\r\n    const singleGameLink = `/games/${gameItem.id}`;\r\n\r\n    const displayInstruments = () => gameItem.instrumentsForGame.map((instrument) => (\r\n      <InstrumentItem key={instrument.id} instrument={instrument} />\r\n    ));\r\n\r\n    const displayAges = () => gameItem.agesForGame.map((age) => (\r\n      <AgeItem key={age.id} age={age} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"col-md-4 gameCard\">\r\n        <Card>\r\n        <CardHeader className=\"gameCardHeader\">\r\n          <div className=\"gameIcon\"><i className={gameItem.gameIconHtml}></i></div>\r\n          <div className=\"gameCardHeaderTitle\">{gameItem.name}</div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\"></CardTitle>\r\n          <CardText>\r\n            <div><h6><span className=\"label\">Instruments: </span></h6>{displayInstruments()}</div>\r\n            <h6><span className=\"label\">Prework Level: </span>{gameItem.preworkLevelName}</h6>\r\n            <div><h6><span className=\"label\">Ages: </span></h6>{displayAges()}</div>\r\n            <div><h6><span className=\"label\">Keywords: </span>{gameItem.keywords}</h6></div>\r\n          </CardText>\r\n        </CardBody>\r\n        <CardFooter className=\"cardFooter\">\r\n          <Link to={singleGameLink} className=\"iconButtons doubleSize\"><i className=\"fas fa-eye\"></i></Link>\r\n        </CardFooter>\r\n      </Card>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameItem;\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\gameItemShape.js",["236"],"import PropTypes from 'prop-types';\r\n\r\nconst gameItemShape = PropTypes.shape({\r\n  agesForGame: PropTypes.array,\r\n  credit: PropTypes.string,\r\n  dateCreated: PropTypes.string,\r\n  description: PropTypes,\r\n  gameIconId: PropTypes.number,\r\n  gameIconHtml: PropTypes.string,\r\n  gameIconUrl: PropTypes.string,\r\n  id: PropTypes.number.isRequired,\r\n  instructions: PropTypes.string,\r\n  instrumentsForGame: PropTypes.array,\r\n  isActive: PropTypes.bool.isRequired,\r\n  keywords: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  overallRating: PropTypes.number,\r\n  prework: PropTypes.string,\r\n  preworkLevelId: PropTypes.number,\r\n  preworkLevelName: PropTypes.string,\r\n  songs: PropTypes.string,\r\n  submittedByUserId: PropTypes.number,\r\n  userFirstName: PropTypes.string,\r\n  userLastName: PropTypes.string,\r\n  websiteUrl: PropTypes.string,\r\n});\r\n\r\nexport default { gameItemShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentItem\\InstrumentItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\instrumentShape.js",["237"],"import PropTypes from 'prop-types';\r\n\r\nconst instrumentShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { instrumentShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeItem\\AgeItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\ageShape.js",["238"],"import PropTypes from 'prop-types';\r\n\r\nconst ageShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { ageShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\usersData.js",["239"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getSingleUser = () => axios.get(`${baseUrl}/users/user`);\r\n\r\nconst checkUserEmail = (email) => axios.get(`${baseUrl}/users/email/${email}`);\r\n\r\nexport default { getSingleUser, checkUserEmail };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\agesData.js",["240"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getAgesList = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/ages`)\r\n    .then((agesResponse) => {\r\n      resolve(agesResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getAgesList };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\instrumentsData.js",["241"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getInstrumentsList = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/instruments`)\r\n    .then((instrumentsResponse) => {\r\n      resolve(instrumentsResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getInstrumentsList };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\preworkLevelsData.js",["242"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getPreworkLevelsList = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/preworkLevels`)\r\n    .then((preworkLevelsResponse) => {\r\n      resolve(preworkLevelsResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getPreworkLevelsList };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\AgeFilterItem\\AgeFilterItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\InstrumentFilterItem\\InstrumentFilterItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\PreworkLevelFilterItem\\PreworkLevelFilterItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\preworkLevelShape.js",["243"],"import PropTypes from 'prop-types';\r\n\r\nconst preworkLevelShape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  iconUrl: PropTypes.string,\r\n});\r\n\r\nexport default { preworkLevelShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\propz\\userShape.js",["244"],"import PropTypes from 'prop-types';\r\n\r\nconst userShape = PropTypes.shape({\r\n  activeDate: PropTypes.string,\r\n  dateCreated: PropTypes.string,\r\n  email: PropTypes.string.isRequired,\r\n  firebaseUid: PropTypes.string,\r\n  firstName: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  isActive: PropTypes.bool,\r\n  lastName: PropTypes.string,\r\n  password: PropTypes.string,\r\n  photoUrl: PropTypes.string,\r\n});\r\n\r\nexport default { userShape };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\MyContributions\\MyContributions.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\shared\\GameContributedItem\\GameContributedItem.js",[],"C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\helpers\\data\\gameIconsData.js",["245"],"import axios from 'axios';\r\nimport { baseUrl } from '../constants.json';\r\n\r\nconst getGameIcons = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/gameIcons`)\r\n    .then((gameIconsResponse) => {\r\n      resolve(gameIconsResponse.data);\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport default { getGameIcons };\r\n","C:\\Users\\Ancuta\\source\\repos\\BackendCapstone\\BackendCapstone\\backendcapstone.ui\\src\\components\\pages\\GameNewOrEdit\\GameNewOrEdit.js",["246","247","248","249"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport agesData from '../../../helpers/data/agesData';\r\nimport gameIconsData from '../../../helpers/data/gameIconsData';\r\nimport gamesData from '../../../helpers/data/gamesData';\r\nimport instrumentsData from '../../../helpers/data/instrumentsData';\r\nimport preworkLevelsData from '../../../helpers/data/preworkLevelsData';\r\n\r\nimport './GameNewOrEdit.scss';\r\n\r\nclass GameNewOrEdit extends React.Component {\r\n  state = {\r\n    newGameForm: true,\r\n    agesList: [],\r\n    instrumentsList: [],\r\n    preworkLevelsList: [],\r\n    gameIcons: [],\r\n    gameName: '',\r\n    gameDescription: '',\r\n    gameInstruments: [1],\r\n    gameAges: [5],\r\n    gamePreworkLevel: 1,\r\n    gamePrework: '',\r\n    gameInstructions: '',\r\n    gamePhoto: '',\r\n    gameCredit: '',\r\n    gameWebsite: '',\r\n    gameIcon: 42,\r\n    gameKeywords: '',\r\n    gameSongs: '',\r\n    currentGameId: this.props.match.params.gameid * 1,\r\n    currentGame: {},\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildNewGameForm();\r\n  }\r\n\r\n  buildNewGameForm = () => {\r\n    this.getCurrentGame();\r\n    this.getAges();\r\n    this.getInstruments();\r\n    this.getPreworkLevels();\r\n    this.getGameIcons();\r\n  }\r\n\r\n  getCurrentGame = () => {\r\n    const { currentGameId } = this.state;\r\n    if (currentGameId) {\r\n      this.setState({ newGameForm: false });\r\n      gamesData.getGameById(currentGameId)\r\n        .then((currentGameResponse) => {\r\n          this.setState({\r\n            gameName: currentGameResponse.data.name,\r\n            gameDescription: currentGameResponse.data.description,\r\n            gameInstruments: currentGameResponse.data.instrumentIdsForGame,\r\n            gameAges: currentGameResponse.data.ageIdsForGame,\r\n            gamePreworkLevel: currentGameResponse.data.preworkLevelId,\r\n            gamePrework: currentGameResponse.data.prework,\r\n            gameInstructions: currentGameResponse.data.instructions,\r\n            gamePhoto: currentGameResponse.data.photoUrl,\r\n            gameCredit: currentGameResponse.data.credit,\r\n            gameWebsite: currentGameResponse.data.websiteUrl,\r\n            gameIcon: currentGameResponse.data.gameIconId,\r\n            gameKeywords: currentGameResponse.data.keywords,\r\n            gameSongs: currentGameResponse.data.songs,\r\n          });\r\n        })\r\n        .catch((error) => console.error('Could not get current game.', error));\r\n    }\r\n  }\r\n\r\n  getAges = () => {\r\n    agesData.getAgesList()\r\n      .then((agesResponse) => {\r\n        this.setState({ agesList: agesResponse });\r\n      });\r\n  }\r\n\r\n  getInstruments = () => {\r\n    instrumentsData.getInstrumentsList()\r\n      .then((instrumentsResponse) => {\r\n        this.setState({ instrumentsList: instrumentsResponse });\r\n      });\r\n  }\r\n\r\n  getPreworkLevels = () => {\r\n    preworkLevelsData.getPreworkLevelsList()\r\n      .then((preworkLevelsResponse) => {\r\n        this.setState({ preworkLevelsList: preworkLevelsResponse });\r\n      });\r\n  }\r\n\r\n  getGameIcons = () => {\r\n    gameIconsData.getGameIcons()\r\n      .then((gameIconsResponse) => {\r\n        this.setState({ gameIcons: gameIconsResponse });\r\n      });\r\n  }\r\n\r\n  // change functions for the fields on the new game form:\r\n  changeGameName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameName: e.target.value });\r\n  }\r\n\r\n  changeGameDescription = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameDescription: e.target.value });\r\n  }\r\n\r\n  changeGameIcon = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameIcon: e.target.value * 1 });\r\n  }\r\n\r\n  changeInstruments = (event) => {\r\n    const opts = [];\r\n    let opt;\r\n    for (let i = 0, len = event.target.options.length; i < len; i += 1) {\r\n      opt = event.target.options[i];\r\n      if (opt.selected) {\r\n        opts.push(opt.value * 1);\r\n      }\r\n    }\r\n    this.setState({ gameInstruments: opts });\r\n  }\r\n\r\n  changeAges = (event) => {\r\n    const opts = [];\r\n    let opt;\r\n    for (let i = 0, len = event.target.options.length; i < len; i += 1) {\r\n      opt = event.target.options[i];\r\n      if (opt.selected) {\r\n        opts.push(opt.value * 1);\r\n      }\r\n    }\r\n    this.setState({ gameAges: opts });\r\n    console.error('event', event);\r\n  }\r\n\r\n  changeGameKeywords = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameKeywords: e.target.value });\r\n  }\r\n\r\n  changeGameSongs = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameSongs: e.target.value });\r\n  }\r\n\r\n  changeGamePreworkLevel = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gamePreworkLevel: e.target.value * 1 });\r\n  }\r\n\r\n  changeGamePrework = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gamePrework: e.target.value });\r\n  }\r\n\r\n  changeGameInstructions = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameInstructions: e.target.value });\r\n  }\r\n\r\n  changeGamePhoto = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gamePhoto: e.target.value });\r\n  }\r\n\r\n  changeGameCredit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameCredit: e.target.value });\r\n  }\r\n\r\n  changeGameWebsite = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ gameWebsite: e.target.value });\r\n  }\r\n\r\n  validationAlert = () => {\r\n    Swal.fire('You must specify a NAME for this game.');\r\n  }\r\n\r\n  saveNewGame = () => {\r\n    const {\r\n      gameName,\r\n      gameDescription,\r\n      gameInstruments,\r\n      gameAges,\r\n      gamePreworkLevel,\r\n      gamePrework,\r\n      gameInstructions,\r\n      gamePhoto,\r\n      gameCredit,\r\n      gameWebsite,\r\n      gameIcon,\r\n      gameKeywords,\r\n      gameSongs,\r\n    } = this.state;\r\n    if (gameName === '') {\r\n      this.validationAlert();\r\n    } else {\r\n      const newGameObject = {\r\n        name: gameName,\r\n        description: gameDescription,\r\n        preworkLevelId: gamePreworkLevel,\r\n        prework: gamePrework,\r\n        instructions: gameInstructions,\r\n        photoUrl: gamePhoto,\r\n        credit: gameCredit,\r\n        websiteUrl: gameWebsite,\r\n        gameIconId: gameIcon,\r\n        keywords: gameKeywords,\r\n        songs: gameSongs,\r\n        gameInstruments,\r\n        gameAges,\r\n      };\r\n      gamesData.addGame(newGameObject)\r\n        .then((newGameResponse) => {\r\n          this.props.history.push(`/games/${newGameResponse.data}`);\r\n        })\r\n        .catch((error) => console.error('Could not create the new game.', error));\r\n    }\r\n  }\r\n\r\n  editGame = () => {\r\n    const {\r\n      currentGameId,\r\n      gameName,\r\n      gameDescription,\r\n      gameInstruments,\r\n      gameAges,\r\n      gamePreworkLevel,\r\n      gamePrework,\r\n      gameInstructions,\r\n      gamePhoto,\r\n      gameCredit,\r\n      gameWebsite,\r\n      gameIcon,\r\n      gameKeywords,\r\n      gameSongs,\r\n    } = this.state;\r\n    if (gameName === '') {\r\n      this.validationAlert();\r\n    } else {\r\n      const updatedGameObject = {\r\n        name: gameName,\r\n        description: gameDescription,\r\n        preworkLevelId: gamePreworkLevel,\r\n        prework: gamePrework,\r\n        instructions: gameInstructions,\r\n        photoUrl: gamePhoto,\r\n        credit: gameCredit,\r\n        websiteUrl: gameWebsite,\r\n        gameIconId: gameIcon,\r\n        keywords: gameKeywords,\r\n        songs: gameSongs,\r\n        instrumentIdsForGame: gameInstruments,\r\n        ageIdsForGame: gameAges,\r\n      };\r\n      gamesData.updateGame(currentGameId, updatedGameObject)\r\n        .then((updatedGameResponse) => {\r\n          this.props.history.push(`/games/${currentGameId}`);\r\n        })\r\n        .catch((error) => console.error('Could not save your changes to this game.', error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      agesList,\r\n      instrumentsList,\r\n      preworkLevelsList,\r\n      gameIcons,\r\n      gameName,\r\n      gameDescription,\r\n      gameInstruments,\r\n      gameAges,\r\n      gamePreworkLevel,\r\n      gamePrework,\r\n      gameInstructions,\r\n      gamePhoto,\r\n      gameCredit,\r\n      gameWebsite,\r\n      gameIcon,\r\n      gameKeywords,\r\n      gameSongs,\r\n      newGameForm,\r\n    } = this.state;\r\n\r\n    const buildAgesList = () => agesList.map((age) => (\r\n      <option\r\n        key={age.id}\r\n        value={age.id}\r\n      >{age.name}</option>\r\n    ));\r\n\r\n    const buildInstrumentsList = () => instrumentsList.map((instrument) => (\r\n      <option\r\n        key={instrument.id}\r\n        value={instrument.id}\r\n      >{instrument.name}</option>\r\n    ));\r\n\r\n    const buildPreworkLevelsList = () => preworkLevelsList.map((level) => (\r\n      <option key={level.id} value={level.id}>{level.name}</option>\r\n    ));\r\n\r\n    const buildGameIconsList = () => gameIcons.map((icon) => (\r\n      <option key={icon.id} value={icon.id}>{icon.name}</option>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"GameNew\">\r\n        { newGameForm\r\n          ? <h2 className=\"pageTitle\">Add a New Game</h2>\r\n          : <h2 className=\"pageTitle\">Update Game: {gameName}</h2>\r\n        }\r\n        <Form>\r\n          <FormGroup row>\r\n            <Label for=\"gameName\" sm={2}>Game Name</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"input\"\r\n                name=\"name\"\r\n                id=\"gameName\"\r\n                placeholder=\"Enter a name for the game.\"\r\n                value={gameName}\r\n                onChange={this.changeGameName}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameDescription\" sm={2}>Description</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"gameDescription\"\r\n                value={gameDescription}\r\n                onChange={this.changeGameDescription}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameIcon\" sm={2}>Select an icon:</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"icon\"\r\n                id=\"gameIcon\"\r\n                value={gameIcon}\r\n                onChange={this.changeGameIcon}\r\n              >\r\n                {buildGameIconsList()}\r\n              </Input>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameInstruments\" sm={2}>Select instruments:</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"instruments\"\r\n                id=\"gameInstruments\"\r\n                multiple\r\n                value={this.state.gameInstruments}\r\n                onChange={(event) => { this.changeInstruments(event); }}\r\n              >\r\n                {buildInstrumentsList()}\r\n              </Input>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameAges\" sm={2}>Select student ages:</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"ages\"\r\n                id=\"gameAges\"\r\n                multiple\r\n                value={this.state.gameAges}\r\n                onChange={(event) => { this.changeAges(event); }}\r\n              >\r\n                {buildAgesList()}\r\n              </Input>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameKeywords\" sm={2}>Keywords</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"keywords\"\r\n                id=\"gameKeywords\"\r\n                value={gameKeywords}\r\n                onChange={this.changeGameKeywords}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameSongs\" sm={2}>Songs</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"songs\"\r\n                id=\"gameSongs\"\r\n                value={gameSongs}\r\n                onChange={this.changeGameSongs}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gamePreworkLevel\" sm={2}>Select the prework level:</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"preworkLevel\"\r\n                id=\"gamePreworkLevel\"\r\n                value={gamePreworkLevel}\r\n                onChange={this.changeGamePreworkLevel}\r\n              >\r\n                {buildPreworkLevelsList()}\r\n              </Input>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gamePrework\" sm={2}>Prework Steps</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"prework\"\r\n                id=\"gamePrework\"\r\n                value={gamePrework}\r\n                onChange={this.changeGamePrework}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameInstructions\" sm={2}>Game Instructions</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"instructions\"\r\n                id=\"gameInstructions\"\r\n                value={gameInstructions}\r\n                onChange={this.changeGameInstructions}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gamePhoto\" sm={2}>Photo URL</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"input\"\r\n                name=\"photo\"\r\n                id=\"gamePhoto\"\r\n                value={gamePhoto}\r\n                onChange={this.changeGamePhoto}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameCredit\" sm={2}>Credit</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"input\"\r\n                name=\"credit\"\r\n                id=\"gameCredit\"\r\n                value={gameCredit}\r\n                onChange={this.changeGameCredit}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"gameWebsite\" sm={2}>Game Website</Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"input\"\r\n                name=\"website\"\r\n                id=\"gameWebsite\"\r\n                value={gameWebsite}\r\n                onChange={this.changeGameWebsite}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup check row>\r\n            { newGameForm\r\n              ? <Col>\r\n              <Button onClick={this.saveNewGame}>Add New Game</Button>\r\n            </Col>\r\n              : <Col>\r\n              <Button onClick={this.editGame}>Save Changes</Button>\r\n            </Col>\r\n            }\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameNewOrEdit;\r\n",{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":16},{"ruleId":"266","severity":1,"message":"270","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":42,"column":15,"nodeType":"273","endLine":42,"endColumn":80},{"ruleId":"274","severity":1,"message":"275","line":123,"column":15,"nodeType":"273","endLine":123,"endColumn":102},{"ruleId":"276","severity":1,"message":"277","line":129,"column":37,"nodeType":"278","messageId":"279","endLine":129,"endColumn":39},{"ruleId":"274","severity":1,"message":"275","line":141,"column":19,"nodeType":"273","endLine":141,"endColumn":103},{"ruleId":"276","severity":1,"message":"277","line":155,"column":33,"nodeType":"278","messageId":"279","endLine":155,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":159,"column":51,"nodeType":"282","endLine":159,"endColumn":66},{"ruleId":"266","severity":1,"message":"283","line":16,"column":8,"nodeType":"268","messageId":"269","endLine":16,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":50,"column":5,"nodeType":"286","messageId":"287","endLine":50,"endColumn":53},{"ruleId":"266","severity":1,"message":"288","line":166,"column":7,"nodeType":"268","messageId":"269","endLine":166,"endColumn":19},{"ruleId":"266","severity":1,"message":"289","line":167,"column":7,"nodeType":"268","messageId":"269","endLine":167,"endColumn":26},{"ruleId":"266","severity":1,"message":"290","line":168,"column":7,"nodeType":"268","messageId":"269","endLine":168,"endColumn":28},{"ruleId":"266","severity":1,"message":"291","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":17},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":16},{"ruleId":"266","severity":1,"message":"291","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":21,"column":8,"nodeType":"268","messageId":"269","endLine":21,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":63,"column":77,"nodeType":"282","endLine":63,"endColumn":100},{"ruleId":"293","severity":1,"message":"294","line":70,"column":43,"nodeType":"282","endLine":70,"endColumn":63},{"ruleId":"295","severity":1,"message":"296","line":63,"column":1,"nodeType":"297","endLine":68,"endColumn":3},{"ruleId":"295","severity":1,"message":"296","line":20,"column":1,"nodeType":"297","endLine":26,"endColumn":3},{"ruleId":"266","severity":1,"message":"298","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":30},{"ruleId":"266","severity":1,"message":"299","line":28,"column":21,"nodeType":"268","messageId":"269","endLine":28,"endColumn":38},{"ruleId":"295","severity":1,"message":"296","line":16,"column":1,"nodeType":"297","endLine":16,"endColumn":100},{"ruleId":"295","severity":1,"message":"296","line":13,"column":1,"nodeType":"297","endLine":13,"endColumn":38},{"ruleId":"295","severity":1,"message":"296","line":14,"column":1,"nodeType":"297","endLine":14,"endColumn":42},{"ruleId":"295","severity":1,"message":"296","line":56,"column":1,"nodeType":"297","endLine":66,"endColumn":3},{"ruleId":"300","severity":2,"message":"301","line":20,"column":20,"nodeType":"302","endLine":20,"endColumn":28},{"ruleId":"276","severity":1,"message":"277","line":61,"column":35,"nodeType":"278","messageId":"279","endLine":61,"endColumn":37},{"ruleId":"266","severity":1,"message":"303","line":151,"column":7,"nodeType":"268","messageId":"269","endLine":151,"endColumn":20},{"ruleId":"276","severity":1,"message":"304","line":227,"column":26,"nodeType":"278","messageId":"279","endLine":227,"endColumn":28},{"ruleId":"276","severity":1,"message":"304","line":230,"column":22,"nodeType":"278","messageId":"279","endLine":230,"endColumn":24},{"ruleId":"266","severity":1,"message":"305","line":256,"column":7,"nodeType":"268","messageId":"269","endLine":256,"endColumn":21},{"ruleId":"266","severity":1,"message":"306","line":262,"column":7,"nodeType":"268","messageId":"269","endLine":262,"endColumn":20},{"ruleId":"266","severity":1,"message":"307","line":267,"column":7,"nodeType":"268","messageId":"269","endLine":267,"endColumn":19},{"ruleId":"266","severity":1,"message":"308","line":5,"column":3,"nodeType":"268","messageId":"269","endLine":5,"endColumn":9},{"ruleId":"295","severity":1,"message":"296","line":30,"column":1,"nodeType":"297","endLine":30,"endColumn":34},{"ruleId":"295","severity":1,"message":"296","line":9,"column":1,"nodeType":"297","endLine":9,"endColumn":36},{"ruleId":"295","severity":1,"message":"296","line":9,"column":1,"nodeType":"297","endLine":9,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":8,"column":1,"nodeType":"297","endLine":8,"endColumn":50},{"ruleId":"295","severity":1,"message":"296","line":12,"column":1,"nodeType":"297","endLine":12,"endColumn":32},{"ruleId":"295","severity":1,"message":"296","line":12,"column":1,"nodeType":"297","endLine":12,"endColumn":39},{"ruleId":"295","severity":1,"message":"296","line":12,"column":1,"nodeType":"297","endLine":12,"endColumn":41},{"ruleId":"295","severity":1,"message":"296","line":9,"column":1,"nodeType":"297","endLine":9,"endColumn":38},{"ruleId":"295","severity":1,"message":"296","line":16,"column":1,"nodeType":"297","endLine":16,"endColumn":30},{"ruleId":"295","severity":1,"message":"296","line":12,"column":1,"nodeType":"297","endLine":12,"endColumn":33},{"ruleId":"266","severity":1,"message":"309","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":14},{"ruleId":"266","severity":1,"message":"310","line":10,"column":3,"nodeType":"268","messageId":"269","endLine":10,"endColumn":11},{"ruleId":"266","severity":1,"message":"311","line":280,"column":7,"nodeType":"268","messageId":"269","endLine":280,"endColumn":22},{"ruleId":"266","severity":1,"message":"312","line":281,"column":7,"nodeType":"268","messageId":"269","endLine":281,"endColumn":15},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"lines-around-directive",["315"],"no-spaced-func",["316"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'authData' is defined but never used.","Identifier","unusedVar","'usersData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'ageShape' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'selectedAges' is assigned a value but never used.","'selectedInstruments' is assigned a value but never used.","'selectedPreworkLevels' is assigned a value but never used.","'PropTypes' is defined but never used.","'firebase' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'SinglePracticePlanView' is defined but never used.","'practiceCompleted' is assigned a value but never used.","import/no-unresolved","Unable to resolve path to module 'moment'.","Literal","'selectedGames' is assigned a value but never used.","Expected '===' and instead saw '=='.","'practicePlanId' is assigned a value but never used.","'gameFormModal' is assigned a value but never used.","'selectedGame' is assigned a value but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'FormText' is defined but never used.","'gameInstruments' is assigned a value but never used.","'gameAges' is assigned a value but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements","func-call-spacing"]